import{ay as a,v as i,aR as n,t as e}from"./chunks/framework.B4KT4vS5.js";const r=JSON.parse('{"title":"开发组件","description":"","frontmatter":{},"headers":[],"relativePath":"guide/advanced/development-component.md","filePath":"guide/advanced/development-component.md","lastUpdated":1731566618000}'),p={name:"guide/advanced/development-component.md"};function t(l,s,h,d,k,o){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="开发组件" tabindex="-1">开发组件 <a class="header-anchor" href="#开发组件" aria-label="Permalink to &quot;开发组件&quot;">​</a></h1><h2 id="生成组件模板" tabindex="-1">生成组件模板 <a class="header-anchor" href="#生成组件模板" aria-label="Permalink to &quot;生成组件模板&quot;">​</a></h2><p>通过执行<code>gen</code>脚本可以生成组件模板。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">component-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>Windows系统无法直接执行<code>.sh</code>脚本，可以直接使用<code>git bash</code>执行或者安装Windows Subsystem for Linux (WSL)。</p></div><p>命令执行成功后将生成相应的模板文件。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line"><span>.</span></span>
<span class="line"><span>├─ packages</span></span>
<span class="line"><span>│  ├─ components  // 组件库</span></span>
<span class="line diff add"><span>│  │  └─ &lt;component-name&gt;  // 组件目录</span></span>
<span class="line diff add"><span>│  │     ├─ src   // 源代码</span></span>
<span class="line diff add"><span>│  │     │   ├─ &lt;component-name&gt;.ts  // 类型定义</span></span>
<span class="line diff add"><span>│  │     │   └─ &lt;component-name&gt;.vue // 组件文件</span></span>
<span class="line diff add"><span>│  │     ├─ style // 样式文件</span></span>
<span class="line diff add"><span>│  │     │   ├─ css.ts   // css样式导入</span></span>
<span class="line diff add"><span>│  │     │   └─ index.ts // scss样式导入</span></span>
<span class="line diff add"><span>│  │     └─ index.ts  // 入口文件</span></span>
<span class="line"><span>│  └─ theme-chalk // 样式库</span></span>
<span class="line"><span>│     └─ src   // 源代码</span></span>
<span class="line diff add"><span>│        └─ &lt;component-name&gt;.scss   // 组件样式</span></span>
<span class="line"><span>└─ others  // 其他文件...</span></span></code></pre></div><h2 id="导出组件" tabindex="-1">导出组件 <a class="header-anchor" href="#导出组件" aria-label="Permalink to &quot;导出组件&quot;">​</a></h2><p>组件开发完成后需要在<code>packages/components/index.ts</code>和<code>packages/liv-web/components.ts</code>文件中统一导出组件。</p><p>在<code>packages/components/index.ts</code>文件中添加以下代码：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// others components ...</span></span>
<span class="line diff add"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./component-name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span></code></pre></div><p>在<code>packages/liv-web/components.ts</code>文件中添加以下代码：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// others components ...</span></span>
<span class="line diff add"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { LivComponentName } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@liv-web/components/component-name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Plugin } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // others components ...</span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  LivComponentName, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[];</span></span></code></pre></div><h2 id="导出样式" tabindex="-1">导出样式 <a class="header-anchor" href="#导出样式" aria-label="Permalink to &quot;导出样式&quot;">​</a></h2><p>为了在使用<a href="/docs/guide/introduce/quickstart.html#完整引入">完整引入</a>时提供全量样式文件，组件的样式需要在<code>packages/theme-chalk/src/index.scss</code>文件中统一导出。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// others scss ...</span></span>
<span class="line diff add"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./component-name.scss&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span></code></pre></div><h2 id="全局类型声明" tabindex="-1">全局类型声明 <a class="header-anchor" href="#全局类型声明" aria-label="Permalink to &quot;全局类型声明&quot;">​</a></h2><p>为了在使用<a href="/docs/guide/introduce/quickstart.html#完整引入">完整引入</a>时提供完整的类型支持，组件需要在<code>/typing/global.d.ts</code>文件进行全局类型声明。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // GlobalComponents for Volar</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GlobalComponents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // others components ...</span></span>
<span class="line diff add"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    LivComponentName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">typeof</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;liv-web&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;LivComponentName&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {};</span></span></code></pre></div>`,19)]))}const g=a(p,[["render",t]]);export{r as __pageData,g as default};
