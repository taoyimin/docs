import{az as s,f as a,aS as i,e}from"./chunks/framework.DZUnRBGi.js";const o=JSON.parse('{"title":"加密解密","description":"","frontmatter":{},"headers":[],"relativePath":"guide/basic/encrypt-decrypt.md","filePath":"guide/basic/encrypt-decrypt.md","lastUpdated":1736492388000}'),n={name:"guide/basic/encrypt-decrypt.md"};function p(d,t,h,r,l,c){return e(),a("div",null,t[0]||(t[0]=[i(`<h1 id="加密解密" tabindex="-1">加密解密 <a class="header-anchor" href="#加密解密" aria-label="Permalink to &quot;加密解密&quot;">​</a></h1><p>框架提供了一些常用的加解密方法可以直接使用。</p><h2 id="aesencrypt" tabindex="-1">aesEncrypt <a class="header-anchor" href="#aesencrypt" aria-label="Permalink to &quot;aesEncrypt&quot;">​</a></h2><p>对字符串进行AES加密。</p><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>string</td><td>需要加密的字符串</td><td><code>string</code></td><td>—</td></tr><tr><td>key</td><td>密钥</td><td><code>string</code></td><td>—</td></tr></tbody></table><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { aesEncrypt } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;liv-web&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ciphertext</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> aesEncrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello word&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;123456&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,6)]))}const y=s(n,[["render",p]]);export{o as __pageData,y as default};
