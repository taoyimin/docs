{"version":3,"file":"dict-select.vue2.js","sources":["../../../../../../packages/components/dict-select/src/dict-select.vue"],"sourcesContent":["<template>\r\n  <liv-select\r\n    ref=\"dictSelectRef\"\r\n    class=\"liv-dict-select\"\r\n    v-model=\"model\"\r\n    placeholder=\"请选择\"\r\n    :data=\"options\"\r\n    :label-key=\"propsProxy.labelKey\"\r\n    :value-key=\"propsProxy.valueKey\"\r\n    v-bind=\"globalProps\">\r\n    <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n      <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n    </template>\r\n  </liv-select>\r\n</template>\r\n\r\n<script lang=\"ts\" setup generic=\"T extends Record<string | number | symbol, any>\">\r\nimport { type Ref, inject, ref, watchEffect } from 'vue';\r\nimport type { DictSelectFullProps, DictSelectProps } from './dict-select';\r\nimport LivSelect, { type SelectInstance } from '../../select';\r\nimport { MakeRequired, getPropsPoxy } from '@liv-web/utils';\r\nimport { injectLoadDictList, injectLoadDictListById } from '@liv-web/utils';\r\nimport { DICT_SELECT_KEY } from '@liv-web/constants';\r\n\r\n/**\r\n * 组件配置\r\n */\r\ndefineOptions({\r\n  name: 'LivDictSelect',\r\n});\r\n\r\n/**\r\n * 注入通过dictType参数加载数据字典列表方法\r\n */\r\nconst loadDictList = injectLoadDictList<T[]>();\r\n\r\n/**\r\n * 注入通过parentId参数加载数据字典列表方法\r\n */\r\nconst loadDictListById = injectLoadDictListById<T[]>();\r\n\r\n/**\r\n * 全局属性\r\n */\r\nconst globalProps = inject(DICT_SELECT_KEY, {});\r\n\r\n/**\r\n * 组件属性\r\n */\r\nconst props = withDefaults(defineProps<DictSelectProps<T>>(), {\r\n  labelKey: () => 'label',\r\n  valueKey: () => 'value',\r\n  idKey: () => 'id',\r\n});\r\n\r\n/**\r\n * 属性代理\r\n */\r\nconst propsProxy = getPropsPoxy<\r\n  MakeRequired<DictSelectFullProps<T>, 'labelKey' | 'valueKey' | 'idKey'>\r\n>(props, globalProps);\r\n\r\n/**\r\n * 双向绑定\r\n */\r\nconst model = defineModel<T[keyof T] | (T[keyof T] | undefined)[]>();\r\n\r\n/**\r\n * v-model:dict-id绑定值\r\n */\r\nconst dictId = defineModel<T[keyof T] | (T[keyof T] | undefined)[]>('dictId');\r\n\r\n/**\r\n * v-model:dict-name绑定值\r\n */\r\nconst dictName = defineModel<T[keyof T] | (T[keyof T] | undefined)[]>('dictName');\r\n\r\n/**\r\n * v-model:dict绑定值\r\n */\r\nconst dict = defineModel<T | (T | undefined)[] | undefined>('dict');\r\n\r\n/**\r\n * 组件数据\r\n */\r\nconst options: Ref<T[]> = ref([]);\r\n\r\n/**\r\n * 选择器组件实例\r\n */\r\nconst selectRef = ref<SelectInstance | null>(null);\r\n\r\n/**\r\n * 使选择器的输入框获取焦点\r\n */\r\nfunction focus() {\r\n  selectRef.value?.focus();\r\n}\r\n\r\n/**\r\n * 使选择器的输入框失去焦点，并隐藏下拉框\r\n */\r\nfunction blur() {\r\n  selectRef.value?.blur();\r\n}\r\n\r\n/**\r\n * 根据model初始化其他绑定值\r\n */\r\nwatchEffect(() => {\r\n  if (options.value && options.value.length === 0) {\r\n    return;\r\n  }\r\n  if (Array.isArray(model.value)) {\r\n    if (\r\n      (dict.value as T[] | undefined)?.map(item => item[propsProxy.valueKey])?.join(',') ===\r\n      model.value.join(',')\r\n    ) {\r\n      return;\r\n    }\r\n    const dictMap: Map<T[keyof T] | undefined, T> = new Map(\r\n      options.value.map(item => [item[propsProxy.valueKey], item]),\r\n    );\r\n    const selects = model.value.map(value => dictMap.get(value));\r\n    dictId.value = selects?.map(item => item?.[propsProxy.idKey]);\r\n    dictName.value = selects?.map(item => item?.[propsProxy.labelKey]);\r\n    dict.value = selects;\r\n  } else {\r\n    const select = options.value.find(item => item[propsProxy.valueKey] === model.value);\r\n    dictId.value = select?.[propsProxy.idKey];\r\n    dictName.value = select?.[propsProxy.labelKey];\r\n    dict.value = select;\r\n  }\r\n});\r\n\r\n/**\r\n * 根据parentId初始化组件数据\r\n */\r\nwatchEffect(async () => {\r\n  if (propsProxy.parentId) {\r\n    options.value = (await loadDictListById(propsProxy.parentId)) ?? [];\r\n  } else {\r\n    options.value = [];\r\n  }\r\n});\r\n\r\n/**\r\n * 根据dictType初始化组件数据\r\n */\r\nwatchEffect(async () => {\r\n  if (propsProxy.dictType) {\r\n    options.value = (await loadDictList(propsProxy.dictType)) ?? [];\r\n  } else {\r\n    options.value = [];\r\n  }\r\n});\r\n\r\n/**\r\n * 对外暴露的属性及方法\r\n */\r\ndefineExpose({\r\n  focus,\r\n  blur,\r\n});\r\n</script>\r\n"],"names":["injectLoadDictList","injectLoadDictListById","inject","DICT_SELECT_KEY","getPropsPoxy","_useModel","dict","ref","watchEffect"],"mappings":"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"}