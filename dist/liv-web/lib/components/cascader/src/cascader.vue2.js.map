{"version":3,"file":"cascader.vue2.js","sources":["../../../../../../packages/components/cascader/src/cascader.vue"],"sourcesContent":["<template>\r\n  <el-cascader\r\n    class=\"liv-cascader\"\r\n    v-model=\"model\"\r\n    placeholder=\"请选择\"\r\n    :options=\"options\"\r\n    :props=\"cascaderProps\"\r\n    v-bind=\"omit({ ...globalProps, ...attrs }, 'props')\">\r\n    <template v-for=\"(_, name) in omit($slots, 'default')\" #[name]=\"slotData\">\r\n      <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n    </template>\r\n  </el-cascader>\r\n</template>\r\n\r\n<script lang=\"ts\" setup generic=\"T extends Record<string | number | symbol, any>\">\r\nimport { type Ref, ref, watch, watchEffect, useAttrs, inject } from 'vue';\r\nimport { type CascaderValue, ElCascader } from 'element-plus';\r\nimport type { CascaderFullProps, CascaderProps } from './cascader';\r\nimport { omit } from 'lodash-es';\r\nimport { type CommonRequired, type LoadData, getPropsPoxy } from '@liv-web/utils';\r\nimport type { CascaderPropsProps } from '@liv-web/components';\r\nimport { CASCADER_KEY } from '@liv-web/constants';\r\n\r\n/**\r\n * 组件配置项\r\n */\r\ndefineOptions({\r\n  name: 'LivCascader',\r\n  // 关闭属性透传，手动通过v-bind实现属性透传。因为开启属性透传后，外部透传的props优先级最高，即使内部处理props重新赋值给el-cascader也不生效。\r\n  inheritAttrs: false,\r\n});\r\n\r\n/**\r\n * 注入全局属性\r\n */\r\nconst globalProps = inject(CASCADER_KEY, {}) as CascaderFullProps<any>;\r\n\r\n/**\r\n * 组件属性\r\n */\r\nconst props = withDefaults(defineProps<CascaderProps<T>>(), {\r\n  data: () => [] as T[],\r\n});\r\n\r\n/**\r\n * 属性代理\r\n */\r\nconst propsProxy = getPropsPoxy<CascaderFullProps<T>>(props, globalProps);\r\n\r\n/**\r\n * 透传属性\r\n */\r\nconst attrs = useAttrs();\r\n\r\n/**\r\n * 级联选择器默认属性\r\n */\r\nconst cascaderProps: CommonRequired<\r\n  CascaderPropsProps,\r\n  {\r\n    label: string;\r\n    value: string;\r\n    id: string;\r\n    children: string;\r\n  }\r\n> = {\r\n  multiple: false,\r\n  checkStrictly: true,\r\n  emitPath: false,\r\n  label: 'label',\r\n  value: 'value',\r\n  id: 'id',\r\n  children: 'children',\r\n  ...globalProps?.props,\r\n  ...((attrs.props as CascaderPropsProps) || {}),\r\n};\r\n\r\n/**\r\n * 双向绑定\r\n */\r\nconst model = defineModel<CascaderValue>();\r\n\r\n/**\r\n * 组件数据\r\n */\r\nconst options: Ref<T[]> = ref([]);\r\n\r\n/**\r\n * 组件data属性改变后清空之前的数据\r\n */\r\nwatch(\r\n  () => propsProxy.data,\r\n  () => {\r\n    options.value = [];\r\n  },\r\n);\r\n\r\nwatchEffect(() => {\r\n  initData(propsProxy.data);\r\n});\r\n\r\n/**\r\n * 初始化组件数据\r\n * @param data 组件数据\r\n */\r\nfunction initData(data: LoadData<T> | (() => LoadData<T>) | undefined) {\r\n  if (!data) {\r\n    options.value = [];\r\n  } else if (Array.isArray(data)) {\r\n    options.value = data;\r\n  } else if (data instanceof Function) {\r\n    loadFunction(data);\r\n  } else if (data instanceof Promise) {\r\n    loadPromise(data);\r\n  } else {\r\n    throw new Error('[liv-web/cascader]data属性只能是数组、Promise、Callback函数、Getter函数。');\r\n  }\r\n}\r\n\r\n/**\r\n * 通过回调函数的方式加载数据\r\n * @param fn 回调函数\r\n */\r\nfunction loadFunction(fn: Function) {\r\n  if (fn.length === 0) {\r\n    // Getter函数\r\n    initData(fn());\r\n  } else {\r\n    // CallBack函数\r\n    fn((data: T[]) => {\r\n      options.value = data;\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 通过promise的方法加载数据\r\n * @param promise 加载数据promise\r\n */\r\nfunction loadPromise(promise: Promise<T[]>) {\r\n  promise.then(res => (options.value = res));\r\n}\r\n</script>\r\n"],"names":["inject","CASCADER_KEY","getPropsPoxy","useAttrs","_useModel","ref","watch","watchEffect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,IAAA,MAAM,WAAc,GAAAA,UAAA,CAAOC,sBAAc,EAAA,EAAE,CAAA,CAAA;AAK3C,IAAA,MAAM,KAAQ,GAAA,OAAA,CAAA;AAOd,IAAM,MAAA,UAAA,GAAaC,kBAAmC,CAAA,KAAA,EAAO,WAAW,CAAA,CAAA;AAKxE,IAAA,MAAM,QAAQC,YAAS,EAAA,CAAA;AAKvB,IAAA,MAAM,aAQF,GAAA;AAAA,MACF,QAAU,EAAA,KAAA;AAAA,MACV,aAAe,EAAA,IAAA;AAAA,MACf,QAAU,EAAA,KAAA;AAAA,MACV,KAAO,EAAA,OAAA;AAAA,MACP,KAAO,EAAA,OAAA;AAAA,MACP,EAAI,EAAA,IAAA;AAAA,MACJ,QAAU,EAAA,UAAA;AAAA,MACV,GAAG,WAAa,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,WAAA,CAAA,KAAA;AAAA,MAChB,GAAK,KAAM,CAAA,KAAA,IAAgC,EAAC;AAAA,KAC9C,CAAA;AAKA,IAAM,MAAA,KAAA,GAAQC,YAA2B,CAAA,OAAA,EAAA,YAAA,CAAA,CAAA;AAKzC,IAAM,MAAA,OAAA,GAAoBC,OAAI,CAAA,EAAE,CAAA,CAAA;AAKhC,IAAAC,SAAA;AAAA,MACE,MAAM,UAAW,CAAA,IAAA;AAAA,MACjB,MAAM;AACJ,QAAA,OAAA,CAAQ,QAAQ,EAAC,CAAA;AAAA,OACnB;AAAA,KACF,CAAA;AAEA,IAAAC,eAAA,CAAY,MAAM;AAChB,MAAA,QAAA,CAAS,WAAW,IAAI,CAAA,CAAA;AAAA,KACzB,CAAA,CAAA;AAMD,IAAA,SAAS,SAAS,IAAqD,EAAA;AACrE,MAAA,IAAI,CAAC,IAAM,EAAA;AACT,QAAA,OAAA,CAAQ,QAAQ,EAAC,CAAA;AAAA,OACR,MAAA,IAAA,KAAA,CAAM,OAAQ,CAAA,IAAI,CAAG,EAAA;AAC9B,QAAA,OAAA,CAAQ,KAAQ,GAAA,IAAA,CAAA;AAAA,OAClB,MAAA,IAAW,gBAAgB,QAAU,EAAA;AACnC,QAAA,YAAA,CAAa,IAAI,CAAA,CAAA;AAAA,OACnB,MAAA,IAAW,gBAAgB,OAAS,EAAA;AAClC,QAAA,WAAA,CAAY,IAAI,CAAA,CAAA;AAAA,OACX,MAAA;AACL,QAAM,MAAA,IAAI,MAAM,uIAA4D,CAAA,CAAA;AAAA,OAC9E;AAAA,KACF;AAMA,IAAA,SAAS,aAAa,EAAc,EAAA;AAClC,MAAI,IAAA,EAAA,CAAG,WAAW,CAAG,EAAA;AAEnB,QAAA,QAAA,CAAS,IAAI,CAAA,CAAA;AAAA,OACR,MAAA;AAEL,QAAA,EAAA,CAAG,CAAC,IAAc,KAAA;AAChB,UAAA,OAAA,CAAQ,KAAQ,GAAA,IAAA,CAAA;AAAA,SACjB,CAAA,CAAA;AAAA,OACH;AAAA,KACF;AAMA,IAAA,SAAS,YAAY,OAAuB,EAAA;AAC1C,MAAA,OAAA,CAAQ,IAAK,CAAA,CAAA,GAAA,KAAQ,OAAQ,CAAA,KAAA,GAAQ,GAAI,CAAA,CAAA;AAAA,KAC3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}