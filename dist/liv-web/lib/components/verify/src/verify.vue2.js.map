{"version":3,"file":"verify.vue2.js","sources":["../../../../../../packages/components/verify/src/verify.vue"],"sourcesContent":["<template>\r\n  <div class=\"liv-verify\" :class=\"mode == 'pop' ? 'liv-verify-mask' : ''\" v-show=\"showBox\">\r\n    <div\r\n      :class=\"mode == 'pop' ? 'liv-verify__verifybox' : ''\"\r\n      :style=\"{ 'max-width': parseInt(imgSize.width) + 30 + 'px' }\">\r\n      <div class=\"liv-verify__verifybox--top\" v-if=\"mode == 'pop'\">\r\n        请完成安全验证\r\n        <el-icon size=\"22\" @click=\"closeBox\">\r\n          <Close />\r\n        </el-icon>\r\n      </div>\r\n      <div class=\"liv-verify__verifybox--bottom\" :style=\"{ padding: mode == 'pop' ? '15px' : '0' }\">\r\n        <!-- 验证码容器 -->\r\n        <component\r\n          v-if=\"componentType\"\r\n          :is=\"componentType\"\r\n          :captchaType=\"type\"\r\n          :type=\"verifyType\"\r\n          :mode=\"mode\"\r\n          :vSpace=\"vSpace\"\r\n          :explain=\"explain\"\r\n          :imgSize=\"imgSize\"\r\n          :reqGet=\"get\"\r\n          :reqCheck=\"check\"\r\n          ref=\"instance\"></component>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\" setup>\r\n// @ts-ignore\r\nimport VerifySlide from './Verify/VerifySlide.vue';\r\n// @ts-ignore\r\nimport VerifyPoints from './Verify/VerifyPoints.vue';\r\nimport { computed, ref, toRefs, watchEffect, inject, shallowRef } from 'vue';\r\nimport { ElIcon } from 'element-plus';\r\nimport { Close } from '@element-plus/icons-vue';\r\nimport { VerifyEmits, VerifyProps } from './verify';\r\nimport { VERIFY_KEY } from '@liv-web/constants';\r\nimport { getPropsPoxy } from '@liv-web/utils';\r\n\r\n/**\r\n * 组件配置项\r\n */\r\ndefineOptions({\r\n  name: 'LivVerify',\r\n});\r\n\r\n/**\r\n * 注入全局属性\r\n */\r\nconst globalProps = inject(VERIFY_KEY, {});\r\n\r\n/**\r\n * 组件属性\r\n */\r\nconst props = withDefaults(defineProps<VerifyProps>(), {\r\n  type: () => 'blockPuzzle',\r\n  mode: () => 'pop',\r\n  vSpace: () => 5,\r\n  explain: () => '向右滑动完成验证',\r\n  imgSize: () => {\r\n    return {\r\n      width: '310px',\r\n      height: '155px',\r\n    };\r\n  },\r\n});\r\n\r\n/**\r\n * 属性代理\r\n */\r\nconst propsProxy = getPropsPoxy<VerifyProps>(props, globalProps);\r\n\r\n/**\r\n * 组件事件\r\n */\r\ndefineEmits<VerifyEmits>();\r\n\r\nconst { type, mode, vSpace, explain, imgSize, get, check } = toRefs(propsProxy);\r\n//const clickShow = ref(false);\r\nconst clickShow = defineModel({\r\n  default: false,\r\n});\r\nconst verifyType = ref<string | undefined>(undefined);\r\nconst componentType = shallowRef<VerifySlide | VerifyPoints | undefined>(undefined);\r\n\r\nconst instance = ref<any>({});\r\n\r\nconst showBox = computed(() => {\r\n  if (mode?.value == 'pop') {\r\n    return clickShow.value;\r\n  } else {\r\n    return true;\r\n  }\r\n});\r\n\r\n/**\r\n * 刷新\r\n */\r\nconst refresh = () => {\r\n  if (instance.value.refresh) {\r\n    instance.value.refresh();\r\n  }\r\n};\r\n\r\n/**\r\n * 关闭\r\n */\r\nconst closeBox = () => {\r\n  clickShow.value = false;\r\n  refresh();\r\n};\r\n\r\n/**\r\n * 显示\r\n */\r\nconst show = () => {\r\n  if (mode?.value == 'pop') {\r\n    clickShow.value = true;\r\n  }\r\n};\r\n\r\n/**\r\n * 初始化\r\n */\r\nwatchEffect(() => {\r\n  switch (type?.value) {\r\n    case 'blockPuzzle':\r\n      verifyType.value = '2';\r\n      componentType.value = VerifySlide;\r\n      break;\r\n    case 'clickWord':\r\n      verifyType.value = '';\r\n      componentType.value = VerifyPoints;\r\n      break;\r\n  }\r\n});\r\n\r\ndefineExpose({\r\n  clickShow,\r\n  verifyType,\r\n  componentType,\r\n  instance,\r\n  showBox,\r\n  closeBox,\r\n  show,\r\n});\r\n</script>\r\n"],"names":["inject","VERIFY_KEY","getPropsPoxy","toRefs","_useModel","ref","shallowRef","computed","watchEffect","VerifySlide","VerifyPoints"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,IAAA,MAAM,WAAc,GAAAA,UAAA,CAAOC,oBAAY,EAAA,EAAE,CAAA,CAAA;AAKzC,IAAA,MAAM,KAAQ,GAAA,OAAA,CAAA;AAgBd,IAAM,MAAA,UAAA,GAAaC,kBAA0B,CAAA,KAAA,EAAO,WAAW,CAAA,CAAA;AAO/D,IAAM,MAAA,EAAE,IAAM,EAAA,IAAA,EAAM,MAAQ,EAAA,OAAA,EAAS,SAAS,GAAK,EAAA,KAAA,EAAU,GAAAC,UAAA,CAAO,UAAU,CAAA,CAAA;AAE9E,IAAM,MAAA,SAAA,GAAYC,YAAW,CAAA,OAAA,EAAA,YAE5B,CAAA,CAAA;AACD,IAAM,MAAA,UAAA,GAAaC,QAAwB,KAAS,CAAA,CAAA,CAAA;AACpD,IAAM,MAAA,aAAA,GAAgBC,eAAmD,KAAS,CAAA,CAAA,CAAA;AAElF,IAAM,MAAA,QAAA,GAAWD,OAAS,CAAA,EAAE,CAAA,CAAA;AAE5B,IAAM,MAAA,OAAA,GAAUE,aAAS,MAAM;AAC7B,MAAI,IAAA,CAAA,IAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAM,UAAS,KAAO,EAAA;AACxB,QAAA,OAAO,SAAU,CAAA,KAAA,CAAA;AAAA,OACZ,MAAA;AACL,QAAO,OAAA,IAAA,CAAA;AAAA,OACT;AAAA,KACD,CAAA,CAAA;AAKD,IAAA,MAAM,UAAU,MAAM;AACpB,MAAI,IAAA,QAAA,CAAS,MAAM,OAAS,EAAA;AAC1B,QAAA,QAAA,CAAS,MAAM,OAAQ,EAAA,CAAA;AAAA,OACzB;AAAA,KACF,CAAA;AAKA,IAAA,MAAM,WAAW,MAAM;AACrB,MAAA,SAAA,CAAU,KAAQ,GAAA,KAAA,CAAA;AAClB,MAAQ,OAAA,EAAA,CAAA;AAAA,KACV,CAAA;AAKA,IAAA,MAAM,OAAO,MAAM;AACjB,MAAI,IAAA,CAAA,IAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAM,UAAS,KAAO,EAAA;AACxB,QAAA,SAAA,CAAU,KAAQ,GAAA,IAAA,CAAA;AAAA,OACpB;AAAA,KACF,CAAA;AAKA,IAAAC,eAAA,CAAY,MAAM;AAChB,MAAA,QAAQ,6BAAM,KAAO;AAAA,QACnB,KAAK,aAAA;AACH,UAAA,UAAA,CAAW,KAAQ,GAAA,GAAA,CAAA;AACnB,UAAA,aAAA,CAAc,KAAQ,GAAAC,mBAAA,CAAA;AACtB,UAAA,MAAA;AAAA,QACF,KAAK,WAAA;AACH,UAAA,UAAA,CAAW,KAAQ,GAAA,EAAA,CAAA;AACnB,UAAA,aAAA,CAAc,KAAQ,GAAAC,oBAAA,CAAA;AACtB,UAAA,MAAA;AAAA,OACJ;AAAA,KACD,CAAA,CAAA;AAED,IAAa,QAAA,CAAA;AAAA,MACX,SAAA;AAAA,MACA,UAAA;AAAA,MACA,aAAA;AAAA,MACA,QAAA;AAAA,MACA,OAAA;AAAA,MACA,QAAA;AAAA,MACA,IAAA;AAAA,KACD,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}