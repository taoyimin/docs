{"version":3,"file":"form-item.vue2.js","sources":["../../../../../../packages/components/form-item/src/form-item.vue"],"sourcesContent":["<template>\r\n  <el-form-item\r\n    ref=\"formItemRef\"\r\n    class=\"liv-form-item\"\r\n    v-bind=\"formItemAttrs\"\r\n    :rules=\"formItemRules\">\r\n    <template #label>\r\n      <div class=\"liv-form-item__label\">\r\n        <span>{{ formItemAttrs.label }}</span>\r\n        <template v-if=\"contentAttrs.tooltip\">\r\n          <el-tooltip\r\n            effect=\"dark\"\r\n            :content=\"contentAttrs.tooltip\"\r\n            :placement=\"contentAttrs.placement ?? 'top'\">\r\n            <el-icon class=\"liv-form-item__label-icon\" :size=\"14\">\r\n              <QuestionFilled />\r\n            </el-icon>\r\n          </el-tooltip>\r\n        </template>\r\n      </div>\r\n    </template>\r\n    <el-input\r\n      v-if=\"fieldType === 'input' || fieldType === 'textarea'\"\r\n      class=\"liv-form-item__input\"\r\n      :placeholder=\"'请输入' + (formItemAttrs.label ?? '')\"\r\n      :showWordLimit=\"contentAttrs.maxlength ? true : false\"\r\n      :type=\"fieldType === 'textarea' ? 'textarea' : 'text'\"\r\n      :rows=\"3\"\r\n      v-bind=\"omit(contentAttrs, ['prefix', 'suffix', 'prepend', 'append'])\"\r\n      v-model=\"model\">\r\n      <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n      <template #prefix v-if=\"contentAttrs.prefix\">\r\n        {{ contentAttrs.prefix }}\r\n      </template>\r\n      <template #suffix v-if=\"contentAttrs.suffix\">\r\n        {{ contentAttrs.suffix }}\r\n      </template>\r\n      <template #prepend v-if=\"contentAttrs.prepend\">\r\n        {{ contentAttrs.prepend }}\r\n      </template>\r\n      <template #append v-if=\"contentAttrs.append\">\r\n        {{ contentAttrs.append }}\r\n      </template>\r\n    </el-input>\r\n    <el-input\r\n      v-else-if=\"fieldType === 'ciphertext'\"\r\n      class=\"liv-form-item__ciphertext\"\r\n      :placeholder=\"'请输入' + (formItemAttrs.label ?? '')\"\r\n      :showWordLimit=\"contentAttrs.maxlength ? true : false\"\r\n      :disabled=\"!ciphertextDecrypted\"\r\n      v-bind=\"omit(contentAttrs, ['type'])\"\r\n      :modelValue=\"model\"\r\n      @update:modelValue=\"ciphertextUpdate\">\r\n      <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n      <template\r\n        v-if=\"\r\n          !$slots.append && initialVal !== undefined && initialVal !== null && initialVal !== ''\r\n        \"\r\n        #append>\r\n        <el-icon\r\n          ><View v-if=\"ciphertextDecrypted\" @click=\"resetCiphertext\" /><Hide\r\n            v-else\r\n            @click=\"verifyVisible = true\" />\r\n        </el-icon>\r\n      </template>\r\n    </el-input>\r\n    <liv-select\r\n      v-else-if=\"fieldType === 'select'\"\r\n      class=\"liv-form-item__select\"\r\n      :placeholder=\"'请选择' + (formItemAttrs.label ?? '')\"\r\n      clearable\r\n      v-bind=\"contentAttrs\"\r\n      v-model=\"model\">\r\n      <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n    </liv-select>\r\n    <liv-cascader\r\n      v-else-if=\"fieldType === 'cascader'\"\r\n      class=\"liv-form-item__cascader\"\r\n      :placeholder=\"'请选择' + (formItemAttrs.label ?? '')\"\r\n      clearable\r\n      v-bind=\"contentAttrs\"\r\n      v-model=\"model\"\r\n      @change=\"validateFormItem\">\r\n      <template v-for=\"(_, name) in slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n    </liv-cascader>\r\n    <liv-radio\r\n      v-else-if=\"fieldType === 'radio'\"\r\n      class=\"liv-form-item__radio\"\r\n      v-bind=\"contentAttrs\"\r\n      v-model=\"model\">\r\n      <template v-for=\"(_, name) in slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n    </liv-radio>\r\n    <liv-checkbox\r\n      v-else-if=\"fieldType === 'checkbox'\"\r\n      class=\"liv-form-item__checkbox\"\r\n      v-bind=\"contentAttrs\"\r\n      v-model=\"model\"\r\n      @change=\"validateFormItem\">\r\n      <template v-for=\"(_, name) in slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n    </liv-checkbox>\r\n    <el-date-picker\r\n      v-else-if=\"fieldType === 'date'\"\r\n      class=\"liv-form-item__date\"\r\n      :placeholder=\"'请选择' + (formItemAttrs.label ?? '')\"\r\n      :value-format=\"dateValueFormat[contentAttrs.type]\"\r\n      clearable\r\n      v-bind=\"contentAttrs\"\r\n      v-model=\"model\">\r\n      <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n    </el-date-picker>\r\n    <el-time-picker\r\n      v-else-if=\"fieldType === 'time'\"\r\n      class=\"liv-form-item__time\"\r\n      :placeholder=\"'请选择' + (formItemAttrs.label ?? '')\"\r\n      clearable\r\n      v-bind=\"contentAttrs\"\r\n      v-model=\"model\">\r\n    </el-time-picker>\r\n    <el-switch\r\n      v-else-if=\"fieldType === 'switch'\"\r\n      class=\"liv-form-item__switch\"\r\n      v-bind=\"contentAttrs\"\r\n      v-model=\"model\">\r\n      <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n    </el-switch>\r\n    <el-input-number\r\n      v-else-if=\"fieldType === 'number'\"\r\n      class=\"liv-form-item__number\"\r\n      :placeholder=\"'请输入' + (formItemAttrs.label ?? '')\"\r\n      v-bind=\"omit(contentAttrs, ['prefix', 'suffix'])\"\r\n      v-model=\"model\">\r\n      <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n      <template #prefix v-if=\"contentAttrs.prefix\">\r\n        {{ contentAttrs.prefix }}\r\n      </template>\r\n      <template #suffix v-if=\"contentAttrs.suffix\">\r\n        {{ contentAttrs.suffix }}\r\n      </template>\r\n    </el-input-number>\r\n    <number-range\r\n      v-else-if=\"fieldType === 'numberRange'\"\r\n      class=\"liv-form-item__number-range\"\r\n      v-model=\"model\"\r\n      v-bind=\"contentAttrs\">\r\n      <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n    </number-range>\r\n    <el-rate v-else-if=\"fieldType === 'rate'\" v-bind=\"contentAttrs\" v-model=\"model\" />\r\n    <el-color-picker v-else-if=\"fieldType === 'color'\" v-bind=\"contentAttrs\" v-model=\"model\" />\r\n    <el-upload\r\n      class=\"liv-form-item__upload\"\r\n      v-else-if=\"\r\n        fieldType === 'image' ||\r\n        fieldType === 'audio' ||\r\n        fieldType === 'video' ||\r\n        fieldType === 'file'\r\n      \"\r\n      :action=\"contentAttrs['chunk'] ? '' : fileUploadUrl\"\r\n      :http-request=\"contentAttrs['chunk'] ? fileHttpRequest : undefined\"\r\n      :headers=\"typeof fileUploadHeader === 'function' ? fileUploadHeader() : fileUploadHeader\"\r\n      :list-type=\"uploadListType[fieldType]\"\r\n      :data=\"typeof fileUploadData === 'function' ? fileUploadData() : fileUploadData\"\r\n      :accept=\"uploadAccpet[fieldType]\"\r\n      :limit=\"9\"\r\n      :on-preview=\"onPreview\"\r\n      :class=\"{\r\n        'liv-form-item__upload--hide': model.length >= (contentAttrs.limit || 9),\r\n      }\"\r\n      v-bind=\"omit(contentAttrs, ['on-success', 'onSuccess', 'on-remove', 'onRemove'])\"\r\n      :file-list=\"model\"\r\n      :on-success=\"uploadSuccess\"\r\n      :on-remove=\"uploadRemove\"\r\n      :before-upload=\"beforeUpload\">\r\n      <el-icon\r\n        v-if=\"\r\n          (contentAttrs['listType'] ?? contentAttrs['list-type'] ?? uploadListType[fieldType]) ===\r\n          'picture-card'\r\n        \">\r\n        <Plus />\r\n      </el-icon>\r\n      <el-button\r\n        v-else\r\n        type=\"primary\"\r\n        plain\r\n        :disabled=\"((model as [])?.length ?? 0) >= ((contentAttrs.limit as number) || 9)\">\r\n        <el-icon style=\"margin-right: 4px\" size=\"16\"><FolderOpened /></el-icon>\r\n        选择文件</el-button\r\n      >\r\n      <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n      <template v-if=\"contentAttrs.tip\" #tip>\r\n        <div class=\"liv-form-item__upload--tip\">{{ contentAttrs.tip }}</div>\r\n      </template>\r\n    </el-upload>\r\n    <dict-select\r\n      v-else-if=\"fieldType === 'dict'\"\r\n      class=\"liv-form-item__dict\"\r\n      :placeholder=\"'请选择' + (formItemAttrs.label ?? '')\"\r\n      clearable\r\n      v-bind=\"contentAttrs\"\r\n      v-model=\"model\">\r\n      <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n    </dict-select>\r\n    <dict-select\r\n      v-else-if=\"fieldType === 'dictId'\"\r\n      class=\"liv-form-item__dict\"\r\n      :placeholder=\"'请选择' + (formItemAttrs.label ?? '')\"\r\n      clearable\r\n      v-bind=\"contentAttrs\"\r\n      v-model:dict-id=\"model\">\r\n      <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n    </dict-select>\r\n    <grid-cascader\r\n      v-else-if=\"fieldType === 'grid' || fieldType === 'gridCode'\"\r\n      class=\"liv-form-item__grid\"\r\n      :placeholder=\"'请选择' + (formItemAttrs.label ?? '')\"\r\n      clearable\r\n      v-bind=\"contentAttrs\"\r\n      v-model=\"model\"\r\n      @change=\"validateFormItem\">\r\n      <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n    </grid-cascader>\r\n    <grid-cascader\r\n      v-else-if=\"fieldType === 'gridId'\"\r\n      class=\"liv-form-item__grid\"\r\n      :placeholder=\"'请选择' + (formItemAttrs.label ?? '')\"\r\n      clearable\r\n      v-bind=\"contentAttrs\"\r\n      v-model:grid-id=\"model\"\r\n      @change=\"validateFormItem\">\r\n      <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n        <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n      </template>\r\n    </grid-cascader>\r\n    <div class=\"liv-form-item__location-picker\" v-else-if=\"fieldType === 'location'\">\r\n      <el-button type=\"primary\" plain @click=\"locationPickerDialog = true\">\r\n        <el-icon style=\"margin-right: 4px\" size=\"16\"><Location /></el-icon>\r\n        选择位置</el-button\r\n      >\r\n      <div class=\"liv-form-item__location-picker--value\">\r\n        <el-tooltip placement=\"top\" v-if=\"model?.[0] || model?.[1]\">\r\n          <span v-if=\"address\">{{ address }}</span>\r\n          <span v-else-if=\"model?.[0] || model?.[1]\">\r\n            经度：{{ model?.[0] }} 纬度：{{ model?.[1] }}\r\n          </span>\r\n          <template #content>\r\n            <div v-if=\"address\">{{ address }}</div>\r\n            <div>经度：{{ model?.[0] }} 纬度：{{ model?.[1] }}</div>\r\n          </template>\r\n        </el-tooltip>\r\n      </div>\r\n    </div>\r\n    <div v-else-if=\"fieldType === 'richText'\">\r\n      <rich-text class=\"liv-form-item__rich-text\" v-model=\"model\" v-bind=\"contentAttrs\"></rich-text>\r\n    </div>\r\n    <template v-else-if=\"fieldType === 'slot' && formItemAttrs.prop\">\r\n      <slot :name=\"formItemAttrs.prop\"></slot>\r\n    </template>\r\n    <template v-else>\r\n      <slot></slot>\r\n    </template>\r\n    <slot name=\"right\"></slot>\r\n  </el-form-item>\r\n  <el-image-viewer\r\n    @close=\"() => (imageViewerVisible = false)\"\r\n    v-if=\"imageViewerVisible\"\r\n    :url-list=\"previewList\" />\r\n  <el-dialog title=\"选取经纬度\" v-model=\"locationPickerDialog\" width=\"55%\">\r\n    <location-picker\r\n      v-bind=\"contentAttrs\"\r\n      v-model=\"model\"\r\n      v-model:address=\"address\"\r\n      @confirm=\"locationPickerConfirm()\"></location-picker>\r\n  </el-dialog>\r\n  <verify\r\n    v-if=\"fieldType === 'ciphertext'\"\r\n    v-bind=\"contentAttrs\"\r\n    v-model=\"verifyVisible\"\r\n    @success=\"verifySuccess\"></verify>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport {\r\n  type Ref,\r\n  type ShallowRef,\r\n  computed,\r\n  inject,\r\n  nextTick,\r\n  onMounted,\r\n  ref,\r\n  shallowRef,\r\n  useAttrs,\r\n  useSlots,\r\n  watch,\r\n} from 'vue';\r\nimport {\r\n  ElFormItem,\r\n  ElInput,\r\n  ElIcon,\r\n  ElDialog,\r\n  ElDatePicker,\r\n  ElTimePicker,\r\n  ElSwitch,\r\n  ElInputNumber,\r\n  ElRate,\r\n  ElColorPicker,\r\n  ElUpload,\r\n  ElButton,\r\n  formItemProps as elFormItemProps,\r\n  genFileId,\r\n  formContextKey,\r\n  ElMessage,\r\n  ElImageViewer,\r\n  ElTooltip,\r\n} from 'element-plus';\r\nimport type {\r\n  FormItemProps as ElFormItemProps,\r\n  FormItemInstance as ElFormItemInstance,\r\n  FormItemRule,\r\n  UploadFile as ElUploadFile,\r\n  UploadFiles,\r\n  FormContext,\r\n  UploadRequestOptions,\r\n  UploadProgressEvent,\r\n  UploadRawFile,\r\n} from 'element-plus';\r\nimport { FolderOpened, Plus, Location, View, Hide, QuestionFilled } from '@element-plus/icons-vue';\r\nimport { omit, pick } from 'lodash-es';\r\nimport { FormItemProps } from './form-item';\r\nimport LivSelect from '../../select/src/select.vue';\r\nimport LivRadio from '../../radio/src/radio.vue';\r\nimport LivCheckbox from '../../checkbox/src/checkbox.vue';\r\nimport LivCascader from '../../cascader/src/cascader.vue';\r\nimport DictSelect from '../../dict-select/src/dict-select.vue';\r\nimport GridCascader from '../../grid-cascader/src/grid-cascader.vue';\r\nimport LocationPicker from '../../location-picker/src/location-picker.vue';\r\nimport RichText from '../../rich-text/src/rich-text.vue';\r\nimport NumberRange from '../../number-range/src/number-range.vue';\r\nimport Verify from '../../verify/src/verify.vue';\r\nimport type { VerifyResult } from '../../verify';\r\nimport {\r\n  getFileName,\r\n  getMd5ByFile,\r\n  injectHandleFileUrls,\r\n  injectHandleFileResponse,\r\n  injectFileUploadUrl,\r\n  injectFileUploadHeader,\r\n  injectFileUploadData,\r\n  injectFileChunkUploadConfig,\r\n  injectFileChunkUploadFunction,\r\n  injectFileChunkMergeFunction,\r\n  validateNonEmpty,\r\n} from '@liv-web/utils';\r\nimport { clone } from 'lodash-es';\r\nimport {\r\n  CIPHERTEXT_STATUS_KEY,\r\n  DATA_FORM_AMAP_KEY,\r\n  DATA_FORM_MODEL_KEY,\r\n  FORM_ITEM_KEY,\r\n} from '@liv-web/constants';\r\nimport type { Awaitable } from 'element-plus/es/utils';\r\n\r\n/**\r\n * 组件配置\r\n */\r\ndefineOptions({\r\n  name: 'LivFormItem',\r\n  inheritAttrs: false,\r\n});\r\n\r\n/**\r\n * 部分组件透传插槽会报ts错误，暂时先用该方法解决\r\n */\r\nconst slots: {\r\n  default?: any;\r\n} = useSlots();\r\n\r\n/**\r\n * 组件插槽\r\n */\r\ndefineSlots<{\r\n  [key: string]: any;\r\n}>();\r\n\r\n/**\r\n * 注入文件上传地址\r\n */\r\nconst fileUploadUrl = injectFileUploadUrl();\r\n\r\n/**\r\n * 注入文件切片上传配置数据\r\n */\r\nconst fileChunkUploadConfig = injectFileChunkUploadConfig();\r\n\r\n/**\r\n * 注入文件上传地址\r\n */\r\nconst fileChunkUploadFunction = injectFileChunkUploadFunction();\r\n\r\n/**\r\n * 注入文件上传地址\r\n */\r\nconst fileChunkMergeFunction = injectFileChunkMergeFunction();\r\n\r\n/**\r\n * 注入文件上传请求Header\r\n */\r\nconst fileUploadHeader = injectFileUploadHeader();\r\n\r\n/**\r\n * 注入文件上传请求Data\r\n */\r\nconst fileUploadData = injectFileUploadData();\r\n\r\n/**\r\n * 注入处理文件上传返回response方法\r\n */\r\nconst handleFileResponse = injectHandleFileResponse();\r\n\r\n/**\r\n * 注入处理文件上传地址方法\r\n */\r\nconst handleFileUrls = injectHandleFileUrls();\r\n\r\n/**\r\n * 注入表单组件数据模型\r\n */\r\nconst formModel = inject<Ref<{ [key: string]: any }> | undefined>(DATA_FORM_MODEL_KEY, undefined);\r\n\r\n/**\r\n * 注入AMap实例\r\n */\r\nconst AMapRef = inject<ShallowRef<any>>(DATA_FORM_AMAP_KEY, shallowRef());\r\n\r\n/**\r\n * 表单项组件实例\r\n */\r\nconst formItemRef = shallowRef<ElFormItemInstance | null>(null);\r\n\r\n/**\r\n * 全局属性\r\n */\r\nconst globalProps = inject(FORM_ITEM_KEY, {});\r\n\r\n/**\r\n * 组件属性\r\n */\r\nconst props = defineProps<FormItemProps>();\r\n\r\n/**\r\n * 组件attribute\r\n */\r\nconst attrs = useAttrs();\r\n\r\n/**\r\n * form-item属性\r\n */\r\nconst formItemAttrs = computed<ElFormItemProps>(() => {\r\n  return pick(\r\n    Object.assign(globalProps ?? {}, attrs),\r\n    Object.keys(elFormItemProps),\r\n  ) as ElFormItemProps;\r\n});\r\n\r\n/**\r\n * 具体表单项实现组件属性\r\n */\r\nconst contentAttrs = computed<any>(() => {\r\n  return omit(attrs, Object.keys(elFormItemProps));\r\n});\r\n\r\n/**\r\n * 表单组件上下文\r\n */\r\nconst formContext: FormContext | undefined = inject(formContextKey);\r\n\r\n/**\r\n * 表单项初始值快照\r\n */\r\nconst initialVal = ref();\r\n\r\n/**\r\n * 双向绑定model\r\n */\r\nconst [model, modifiers] = defineModel({\r\n  default: undefined,\r\n  type: [String, Number, Boolean, Object, Array],\r\n  set(value) {\r\n    if (modifiers.raw) {\r\n      return value;\r\n    } else {\r\n      switch (props.fieldType) {\r\n        case 'input':\r\n        case 'ciphertext':\r\n        case 'textarea':\r\n        case 'radio':\r\n        case 'date':\r\n        case 'time':\r\n        case 'number':\r\n        case 'switch':\r\n        case 'rate':\r\n        case 'color':\r\n        case 'richText':\r\n        case 'numberRange':\r\n        case 'location':\r\n        case 'slot':\r\n        case undefined:\r\n          return value;\r\n        case 'select':\r\n        case 'dict':\r\n        case 'dictId':\r\n          if (attrs.multiple === '' || attrs.multiple === true) {\r\n            return Array.isArray(value) ? value.join(',') : value;\r\n          } else {\r\n            return value;\r\n          }\r\n        case 'cascader':\r\n        case 'grid':\r\n        case 'gridCode':\r\n        case 'gridId':\r\n          if ((attrs.props as any)?.multiple === '' || (attrs.props as any)?.multiple === true) {\r\n            return Array.isArray(value) ? value.join(',') : value;\r\n          } else {\r\n            return value;\r\n          }\r\n        case 'checkbox':\r\n          return (value as []).join(',');\r\n        case 'image':\r\n        case 'audio':\r\n        case 'video':\r\n        case 'file':\r\n          fileList.value = value as UploadFiles;\r\n          return uploadFiles2Urls(value as UploadFiles);\r\n        default:\r\n          const n: never = props.fieldType;\r\n          console.warn(`[liv-web/form-item]传入了一个未知的fieldType类型，fieldType=${n}。`);\r\n          return value;\r\n      }\r\n    }\r\n  },\r\n  get(value) {\r\n    if (modifiers.raw) {\r\n      return value;\r\n    } else {\r\n      switch (props.fieldType) {\r\n        case 'input':\r\n        case 'ciphertext':\r\n        case 'textarea':\r\n        case 'radio':\r\n        case 'time':\r\n        case 'number':\r\n        case 'switch':\r\n        case 'rate':\r\n        case 'color':\r\n        case 'richText':\r\n        case 'numberRange':\r\n        case 'location':\r\n        case 'slot':\r\n        case undefined:\r\n          return value;\r\n        case 'date':\r\n          return typeof value === 'number' ? value + '' : value;\r\n        case 'select':\r\n        case 'dict':\r\n        case 'dictId':\r\n          if (attrs.multiple === '' || attrs.multiple === true) {\r\n            return value ? (Array.isArray(value) ? value : (value as string).split(',')) : [];\r\n          } else {\r\n            return value;\r\n          }\r\n        case 'cascader':\r\n        case 'grid':\r\n        case 'gridCode':\r\n        case 'gridId':\r\n          if ((attrs.props as any)?.multiple === '' || (attrs.props as any)?.multiple === true) {\r\n            return value ? (Array.isArray(value) ? value : (value as string).split(',')) : [];\r\n          } else {\r\n            return value;\r\n          }\r\n        case 'checkbox':\r\n          return value ? (value as string).split(',') : [];\r\n        case 'image':\r\n        case 'audio':\r\n        case 'video':\r\n        case 'file':\r\n          return urls2UploadFiles(value as string);\r\n        default:\r\n          const n: never = props.fieldType;\r\n          console.warn(`[liv-web/form-item]传入了一个未知的fieldType类型，fieldType=${n}。`);\r\n          return value;\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\n/**\r\n * 初始化表单项默认的rules\r\n */\r\nconst formItemRules = computed(() => {\r\n  const { required: requiredAttr, label, rules, prop } = formItemAttrs.value;\r\n  const required = (requiredAttr as boolean | string | undefined) === '' || requiredAttr === true;\r\n  const emptyRule: FormItemRule = {\r\n    required: required,\r\n    message: '',\r\n    trigger: ['blur', 'change'],\r\n    validator: validateNonEmpty,\r\n  };\r\n  if (props.fieldType === 'ciphertext' && ciphertextStatus?.value[prop as string] === false) {\r\n    // 如果是加密表单项且未解密则跳过校验\r\n    return undefined;\r\n  }\r\n  switch (props.fieldType) {\r\n    case 'input':\r\n    case 'textarea':\r\n    case 'number':\r\n    case 'richText':\r\n    case 'ciphertext':\r\n      emptyRule.message = `请输入${label ?? ''}`;\r\n      break;\r\n    case 'select':\r\n    case 'cascader':\r\n    case 'radio':\r\n    case 'switch':\r\n    case 'date':\r\n    case 'time':\r\n    case 'rate':\r\n    case 'color':\r\n    case 'dict':\r\n    case 'dictId':\r\n    case 'grid':\r\n    case 'gridCode':\r\n    case 'gridId':\r\n      emptyRule.message = `请选择${label ?? ''}`;\r\n      break;\r\n    case 'checkbox':\r\n      emptyRule.message = `请选择${label ?? ''}`;\r\n      // 加了change页面会卡死，原因不明\r\n      emptyRule.trigger = ['blur'];\r\n      break;\r\n    case 'image':\r\n    case 'audio':\r\n    case 'video':\r\n    case 'file':\r\n      emptyRule.message = `请上传${label ?? ''}`;\r\n      break;\r\n    case 'numberRange':\r\n      emptyRule.message = `请输入${label ?? ''}`;\r\n      emptyRule.validator = (_rule: any, _value: any, callback: any) => {\r\n        if (\r\n          model.value === undefined ||\r\n          model.value === null ||\r\n          model.value.length === 0 ||\r\n          model.value?.[0] === undefined ||\r\n          model.value?.[1] === undefined ||\r\n          model.value?.[0] === null ||\r\n          model.value?.[1] === null\r\n        ) {\r\n          callback(new Error());\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      break;\r\n    case 'location':\r\n      emptyRule.message = `请选择${label ?? ''}`;\r\n      emptyRule.validator = (_rule: any, _value: any, callback: any) => {\r\n        if (\r\n          model.value === undefined ||\r\n          model.value === null ||\r\n          model.value.length === 0 ||\r\n          !model.value?.[0] ||\r\n          !model.value?.[1]\r\n        ) {\r\n          callback(new Error());\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      break;\r\n    case 'slot':\r\n    case undefined:\r\n      emptyRule.message = `${label ?? '该项'}是必填项`;\r\n      break;\r\n    default:\r\n      const n: never = props.fieldType;\r\n      emptyRule.message = `${label ?? '该项'}是必填项`;\r\n      console.warn(`[liv-web/form-item]传入了一个未知的fieldType类型，fieldType=${n}。`);\r\n      break;\r\n  }\r\n  if (Array.isArray(rules)) {\r\n    if (required) {\r\n      return [emptyRule, ...rules];\r\n    } else {\r\n      return rules;\r\n    }\r\n  } else {\r\n    if (rules) {\r\n      if (required) {\r\n        return [emptyRule, rules];\r\n      } else {\r\n        return rules;\r\n      }\r\n    } else {\r\n      if (required) {\r\n        return emptyRule;\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\n// 解决部分组件绑定值改变后没有触发校验的问题\r\nfunction validateFormItem(_value?: any) {\r\n  nextTick(() => formItemRef.value?.validate('change'));\r\n}\r\n\r\n/* el-date-picker */\r\n\r\n/**\r\n * date picker组件value-format属性值\r\n */\r\nconst dateValueFormat: {\r\n  [key: string]: string;\r\n} = {\r\n  undefined: 'YYYY-MM-DD',\r\n  year: 'YYYY',\r\n  month: 'YYYY-MM',\r\n  date: 'YYYY-MM-DD',\r\n  datetime: 'YYYY-MM-DD HH:mm:ss',\r\n  dateTime: 'YYYY-MM-DD HH:mm:ss',\r\n};\r\n\r\n/* el-upload */\r\n\r\n/**\r\n * el-upload组件回显类型\r\n */\r\nconst uploadListType: Record<\r\n  'image' | 'audio' | 'video' | 'file',\r\n  'text' | 'picture' | 'picture-card'\r\n> = {\r\n  image: 'picture-card',\r\n  audio: 'text',\r\n  video: 'text',\r\n  file: 'text',\r\n};\r\n\r\n/**\r\n * el-upload组件接受文件类型\r\n */\r\nconst uploadAccpet = {\r\n  image: 'image/*',\r\n  audio: 'audio/*',\r\n  video: 'video/*',\r\n  file: '*',\r\n};\r\n\r\n/**\r\n * 是否显示图片预览组件\r\n */\r\nconst imageViewerVisible = ref(false);\r\n\r\n/**\r\n * 预览图片集合\r\n */\r\nconst previewList = ref<string[]>([]);\r\n\r\n/**\r\n * 上传组件的图片预览回调\r\n * @param uploadFile 需要预览的文件\r\n */\r\nfunction onPreview(uploadFile: UploadFile) {\r\n  if (props.fieldType === 'image') {\r\n    previewList.value = [uploadFile.url!];\r\n    imageViewerVisible.value = true;\r\n  } else {\r\n    ElMessage.warning('当前文件类型不支持预览！');\r\n  }\r\n}\r\n\r\n/**\r\n * 上传文件列表\r\n */\r\nconst fileList = ref<UploadFiles>([]);\r\n\r\n/**\r\n *  视频切片上传获取切片数据\r\n * @param file 视频文件\r\n * @param md5 文件唯一标识\r\n * @param chunkSize 切片大小\r\n * @returns\r\n * */\r\nfunction getFileAllChunks(file: File, md5: string, name: string) {\r\n  const chunkSize = fileChunkUploadConfig.chunkSize;\r\n  const chunks = [];\r\n  const fileSize = file.size;\r\n  let count = Math.ceil(fileSize / chunkSize);\r\n  let index = 0;\r\n  const fileName = file.name;\r\n  while (index < count) {\r\n    const chunk = file.slice(index * chunkSize, (index + 1) * chunkSize);\r\n    chunks.push({\r\n      index,\r\n      name,\r\n      chunkSize,\r\n      md5,\r\n      fileSize,\r\n      blob: chunk,\r\n      fileName: fileName,\r\n      totalChunkLength: count,\r\n    });\r\n    index++;\r\n  }\r\n  return chunks;\r\n}\r\n\r\n/**\r\n * el-upload组件切片上传请求方法\r\n * @param option el-upload的option\r\n */\r\nasync function fileHttpRequest(option: UploadRequestOptions): Promise<unknown> {\r\n  const { file, onProgress } = option;\r\n\r\n  const LIMIT = fileChunkUploadConfig.limit;\r\n  // 获取文件唯一标识\r\n  const md5 = await getMd5ByFile(file);\r\n  const fileSize = file.size;\r\n\r\n  const chunks = getFileAllChunks(file, md5, option.filename);\r\n  const totalChunkLength = chunks.length;\r\n  const progressArr = new Array(totalChunkLength).fill(0);\r\n  try {\r\n    while (chunks.length) {\r\n      const requests = chunks.splice(0, LIMIT).map(async chunk => {\r\n        await fileChunkUploadFunction?.(chunk, (progressEvent: { loaded: any }) => {\r\n          progressArr[chunk.index] = progressEvent.loaded;\r\n          const uploadedSize = progressArr.reduce((a, b) => a + b, 0);\r\n          const progress = (uploadedSize / fileSize) * 100;\r\n          onProgress?.({ percent: progress } as UploadProgressEvent);\r\n        });\r\n      });\r\n      await Promise.all(requests);\r\n    }\r\n\r\n    const mergeParam = {\r\n      md5,\r\n      fileName: file.name,\r\n      fileSize,\r\n      totalChunkLength,\r\n    };\r\n    const res = await fileChunkMergeFunction?.(mergeParam);\r\n    return Promise.resolve(res);\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n}\r\n\r\n/**\r\n * el-upload文件上传成功回调\r\n * @param response 网格请求结果\r\n * @param uploadFile 上传成功的文件\r\n * @param uploadFiles 上传成功后的文件列表\r\n */\r\nfunction uploadSuccess(response: any, uploadFile: UploadFile, uploadFiles: UploadFiles): void {\r\n  if (uploadFiles.filter(uploadFile => uploadFile.status !== 'success').length === 0) {\r\n    // 上传成功后更新model，如果是多选文件，等所有文件都上传成功后再更新model\r\n    model.value = uploadFiles;\r\n    // 校验表单\r\n    validateFormItem(uploadFiles);\r\n  }\r\n  // 如果外部监听了onSuccess事件，则触发该事件\r\n  const onSuccess = contentAttrs.value['on-success'] ?? contentAttrs.value['onSuccess'];\r\n  if (onSuccess) {\r\n    onSuccess(response, uploadFile, uploadFiles);\r\n  }\r\n}\r\n\r\n/**\r\n * el-upload文件上传前回调\r\n * @param rawFile 上传文件对象\r\n */\r\nfunction beforeUpload(\r\n  rawFile: UploadRawFile,\r\n): Awaitable<boolean | void | File | Blob | null | undefined> {\r\n  if (props.fieldType === 'image' && !rawFile.type.startsWith('image')) {\r\n    ElMessage.error('请上传图片类型文件!');\r\n    return false;\r\n  } else if (props.fieldType === 'audio' && !rawFile.type.startsWith('audio')) {\r\n    ElMessage.error('请上传音频类型文件!');\r\n    return false;\r\n  } else if (props.fieldType === 'video' && !rawFile.type.startsWith('video')) {\r\n    ElMessage.error('请上传视频类型文件!');\r\n    return false;\r\n  } else if (\r\n    contentAttrs.value.extensions &&\r\n    !contentAttrs.value.extensions.find((ext: string) => rawFile.name.endsWith(ext))\r\n  ) {\r\n    ElMessage.error(`只允许上传文件扩展名为${contentAttrs.value.extensions.join('、')}的文件！`);\r\n    return false;\r\n  } else if (contentAttrs.value.maxSize && rawFile.size > contentAttrs.value.maxSize) {\r\n    ElMessage.error(\r\n      `上传文件大小不能超过${contentAttrs.value.maxSize >= 1024 * 1024 ? contentAttrs.value.maxSize / 1024 / 1024 + 'M' : contentAttrs.value.maxSize / 1024 + 'KB'}！`,\r\n    );\r\n    return false;\r\n  }\r\n  // 如果外部监听了beforeUpload事件，则触发该事件\r\n  const beforeUpload = contentAttrs.value['before-upload'] ?? contentAttrs.value['beforeUpload'];\r\n  if (beforeUpload) {\r\n    return beforeUpload(rawFile);\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * el-upload文件移除成功回调\r\n * @param uploadFile 移除的文件\r\n * @param uploadFiles 移除后的文件集合\r\n */\r\nfunction uploadRemove(uploadFile: UploadFile, uploadFiles: UploadFiles): void {\r\n  // 移除文件后更新model\r\n  model.value = uploadFiles;\r\n  // 校验表单\r\n  validateFormItem(uploadFiles);\r\n  // 如果外部监听了onRemove事件，则触发该事件\r\n  const onRemove = contentAttrs.value['on-remove'] ?? contentAttrs.value['onRemove'];\r\n  if (onRemove) {\r\n    onRemove(uploadFile, uploadFiles);\r\n  }\r\n}\r\n\r\n/**\r\n * 将el-upload选取的文件数组转换成后端需要的格式\r\n * @param uploadFiles\r\n */\r\nfunction uploadFiles2Urls(uploadFiles: UploadFile[]): string {\r\n  return uploadFiles\r\n    .reduce((urls, file) => {\r\n      if (file.status === 'success') {\r\n        if (file.relativeUrl) {\r\n          urls.push(file.relativeUrl);\r\n        } else if (file.response) {\r\n          const url = handleFileResponse?.(file.response);\r\n          if (url) {\r\n            urls.push(url);\r\n          }\r\n        }\r\n      }\r\n      return urls;\r\n    }, [] as string[])\r\n    .join(',');\r\n}\r\n\r\ntype UploadFile = ElUploadFile & {\r\n  relativeUrl?: string;\r\n};\r\n\r\n/**\r\n * 将后端返回的格式转换成el-upload需要的文件数组\r\n * @param urls\r\n */\r\nfunction urls2UploadFiles(urls: string): UploadFiles {\r\n  const relativeUrls = urls ? urls.split(',') : [];\r\n  const files: UploadFile[] = [];\r\n  relativeUrls.map(relativeUrl => {\r\n    const file: UploadFile | undefined = fileList.value?.find(item =>\r\n      item.response ? handleFileResponse?.(item.response) === relativeUrl : false,\r\n    );\r\n    if (!file) {\r\n      // 之前没有选取过，手动创建一个file对象\r\n      files.push({\r\n        name: getFileName(relativeUrl),\r\n        url: handleFileUrls?.(relativeUrl)[0],\r\n        relativeUrl: relativeUrl,\r\n        status: 'success',\r\n        uid: genFileId(),\r\n      });\r\n    } else {\r\n      files.push(file);\r\n    }\r\n  });\r\n  return files;\r\n}\r\n\r\n/* location-picker */\r\n\r\n/**\r\n * 地图选点弹窗是否显示\r\n */\r\nconst locationPickerDialog = ref(false);\r\n\r\n/**\r\n * 地图确认选点回调\r\n */\r\nfunction locationPickerConfirm() {\r\n  locationPickerDialog.value = false;\r\n  validateFormItem();\r\n}\r\n\r\n/**\r\n * 选中的位置地址\r\n */\r\nconst address = ref('');\r\n\r\n/**\r\n * 监听AMap实例是否完成初始化\r\n */\r\nwatch(AMapRef, () => {\r\n  if (\r\n    props.fieldType === 'location' &&\r\n    !address.value &&\r\n    AMapRef.value &&\r\n    model.value?.[0] &&\r\n    model.value?.[1]\r\n  ) {\r\n    AMapRef.value.plugin(['AMap.Geocoder'], () => {\r\n      const geocoder = new AMapRef.value.Geocoder({\r\n        radius: 1000,\r\n        extensions: 'all',\r\n      });\r\n      geocoder?.getAddress(model.value, (status: string, result: any) => {\r\n        if (status === 'complete' && result.info === 'OK') {\r\n          address.value = result.regeocode.formattedAddress;\r\n        } else {\r\n          console.error('[liv-web/form-item]逆地理编码失败！', result);\r\n        }\r\n      });\r\n    });\r\n  }\r\n});\r\n\r\n/* verify */\r\n\r\n/**\r\n * 是否显示验证码组件\r\n */\r\nconst verifyVisible = ref(false);\r\n\r\n/**\r\n * 加密表单项状态\r\n */\r\nconst ciphertextStatus = inject<Ref<{ [key: string]: boolean }> | undefined>(\r\n  CIPHERTEXT_STATUS_KEY,\r\n  undefined,\r\n);\r\n\r\n/**\r\n * 密文是否已解密\r\n */\r\nconst ciphertextDecrypted = computed(() => {\r\n  return ciphertextStatus?.value?.[formItemAttrs.value.prop as string];\r\n});\r\n\r\n/**\r\n * 是否通过输入框更新绑定值\r\n */\r\nconst updateFromInput = ref(false);\r\n\r\n/**\r\n * 监听加解密表单项的绑定值\r\n * @remarks 表单编辑场景下，绑定值的初始值可能为空，需要调用详情接口并进行赋值，\r\n * 此时需要将表单置为加密状态，并更新初始值\r\n */\r\nwatch(model, newValue => {\r\n  if (props.fieldType === 'ciphertext') {\r\n    if (ciphertextStatus?.value) {\r\n      if (updateFromInput.value) {\r\n        // 用户手动输入更新绑定值，不更新解密状态\r\n        updateFromInput.value = false;\r\n      } else {\r\n        if (newValue !== undefined && newValue !== null && newValue !== '') {\r\n          // 通过赋值更新绑定值，将表单置为加密状态\r\n          ciphertextStatus.value[formItemAttrs.value.prop as string] = false;\r\n          initialVal.value = model.value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\n/**\r\n * 加解密输入框绑定值更新回调（不触发加解密状态的改变）\r\n * @param e 输入的值\r\n */\r\nfunction ciphertextUpdate(e: string) {\r\n  updateFromInput.value = true;\r\n  model.value = e;\r\n}\r\n\r\n/**\r\n * 验证码校验成功回调\r\n * @param params 校验结果\r\n */\r\nfunction verifySuccess(params: VerifyResult) {\r\n  const decryptImpl = contentAttrs.value.decrypt?.(params, formModel?.value);\r\n  if (decryptImpl) {\r\n    if (decryptImpl instanceof Promise) {\r\n      decryptImpl.then(res => {\r\n        ciphertextUpdate(res);\r\n        if (ciphertextStatus?.value) {\r\n          ciphertextStatus.value[formItemAttrs.value.prop as string] = true;\r\n        }\r\n      });\r\n    } else if (typeof decryptImpl === 'string') {\r\n      ciphertextUpdate(decryptImpl);\r\n      if (ciphertextStatus?.value) {\r\n        ciphertextStatus.value[formItemAttrs.value.prop as string] = true;\r\n      }\r\n    } else {\r\n      console.error('[liv-web/form-item]请检查传入的解密逻辑是否正确！');\r\n    }\r\n  } else {\r\n    console.error('[liv-web/form-item]当fieldType为ciphertext时，需要传入具体的解密逻辑！');\r\n  }\r\n}\r\n\r\n/**\r\n * 重置加密表单项\r\n */\r\nfunction resetCiphertext() {\r\n  model.value = initialVal.value;\r\n  if (ciphertextStatus?.value) {\r\n    // 重置字段解密状态\r\n    ciphertextStatus.value[formItemAttrs.value.prop as string] = false;\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  // fieldType为numberRange时，重写表单的重置字段方法\r\n  if (props.fieldType === 'numberRange' && Array.isArray(formItemAttrs.value.prop)) {\r\n    initialVal.value = clone(model.value);\r\n    function resetNumberRange() {\r\n      model.value = [initialVal.value[0], initialVal.value[1]];\r\n      if (formContext?.model) {\r\n        if (formItemAttrs.value.prop) {\r\n          formContext.model[formItemAttrs.value.prop[0]] = initialVal.value[0];\r\n          formContext.model[formItemAttrs.value.prop[1]] = initialVal.value[1];\r\n        }\r\n      }\r\n    }\r\n    // @ts-ignore\r\n    const field = formContext?.getField?.(formItemAttrs.value.prop);\r\n    if (field) {\r\n      field.resetField = resetNumberRange;\r\n    }\r\n  }\r\n  // fieldType为location时，重写表单的重置字段方法\r\n  if (props.fieldType === 'location' && Array.isArray(formItemAttrs.value.prop)) {\r\n    initialVal.value = clone(model.value);\r\n    function resetLocation() {\r\n      model.value = [initialVal.value[0], initialVal.value[1]];\r\n      if (formContext?.model) {\r\n        if (formItemAttrs.value.prop) {\r\n          formContext.model[formItemAttrs.value.prop[0]] = initialVal.value[0];\r\n          formContext.model[formItemAttrs.value.prop[1]] = initialVal.value[1];\r\n        }\r\n      }\r\n    }\r\n    // @ts-ignore\r\n    const field = formContext?.getField?.(formItemAttrs.value.prop);\r\n    if (field) {\r\n      field.resetField = resetLocation;\r\n    }\r\n  }\r\n  // fieldType为ciphertext时，重写表单的重置字段方法\r\n  if (props.fieldType === 'ciphertext') {\r\n    initialVal.value = model.value;\r\n    const field = formContext?.getField?.(formItemAttrs.value.prop as string);\r\n    if (field) {\r\n      field.resetField = resetCiphertext;\r\n    }\r\n  }\r\n});\r\n</script>\r\n"],"names":["useSlots","injectFileUploadUrl","injectFileChunkUploadConfig","injectFileChunkUploadFunction","injectFileChunkMergeFunction","injectFileUploadHeader","injectFileUploadData","injectHandleFileResponse","injectHandleFileUrls","inject","DATA_FORM_MODEL_KEY","DATA_FORM_AMAP_KEY","shallowRef","FORM_ITEM_KEY","useAttrs","computed","pick","elFormItemProps","omit","formContextKey","ref","_useModel","validateNonEmpty","nextTick","ElMessage","getMd5ByFile","uploadFile","beforeUpload","getFileName","genFileId","watch","CIPHERTEXT_STATUS_KEY","onMounted","clone"],"mappings":"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}