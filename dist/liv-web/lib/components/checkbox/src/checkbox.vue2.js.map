{"version":3,"file":"checkbox.vue2.js","sources":["../../../../../../packages/components/checkbox/src/checkbox.vue"],"sourcesContent":["<template>\r\n  <el-checkbox-group\r\n    class=\"liv-checkbox-group\"\r\n    v-bind=\"pick(globalProps, Object.keys(checkboxGroupProps))\"\r\n    v-model=\"model\">\r\n    <template v-if=\"propsProxy.type === 'button'\">\r\n      <el-checkbox-button\r\n        class=\"liv-checkbox-button\"\r\n        v-for=\"item in options\"\r\n        :key=\"item[propsProxy.labelKey as keyof T]\"\r\n        :label=\"item[propsProxy.labelKey as keyof T]\"\r\n        :value=\"item[propsProxy.valueKey as keyof T]\"\r\n        v-bind=\"omit(item, 'key', 'label', 'value')\">\r\n        <template v-if=\"$slots.default\" #default>\r\n          <slot name=\"default\" v-bind=\"item || {}\" />\r\n        </template>\r\n      </el-checkbox-button>\r\n    </template>\r\n    <template v-else>\r\n      <el-checkbox\r\n        class=\"liv-checkbox\"\r\n        v-for=\"item in options\"\r\n        :key=\"item[propsProxy.labelKey as keyof T]\"\r\n        :label=\"item[propsProxy.labelKey as keyof T]\"\r\n        :value=\"item[propsProxy.valueKey as keyof T]\"\r\n        v-bind=\"omit(item, 'key', 'label', 'value')\">\r\n        <template v-if=\"$slots.default\" #default>\r\n          <slot name=\"default\" v-bind=\"item || {}\" />\r\n        </template>\r\n      </el-checkbox>\r\n    </template>\r\n  </el-checkbox-group>\r\n</template>\r\n\r\n<script lang=\"ts\" setup generic=\"T extends Record<string | number | symbol, any>\">\r\nimport { type Ref, ref, watch, watchEffect, inject } from 'vue';\r\nimport { ElCheckboxGroup, ElCheckbox, ElCheckboxButton, checkboxGroupProps } from 'element-plus';\r\nimport { pick, omit } from 'lodash-es';\r\nimport type { CheckboxFullProps, CheckboxProps } from './checkbox';\r\nimport { type LoadData, getPropsPoxy, MakeRequired } from '@liv-web/utils';\r\nimport { CHECKBOX_KEY } from '@liv-web/constants';\r\n\r\n/**\r\n * 组件配置项\r\n */\r\ndefineOptions({\r\n  name: 'LivCheckbox',\r\n});\r\n\r\n/**\r\n * 注入全局属性\r\n */\r\nconst globalProps = inject(CHECKBOX_KEY, {});\r\n\r\n/**\r\n * 组件属性\r\n */\r\nconst props = withDefaults(defineProps<CheckboxProps<T>>(), {\r\n  labelKey: () => 'label',\r\n  valueKey: () => 'value',\r\n  type: () => 'default',\r\n  data: () => [] as T[],\r\n});\r\n\r\n/**\r\n * 属性代理\r\n */\r\nconst propsProxy = getPropsPoxy<\r\n  MakeRequired<CheckboxFullProps<T>, 'labelKey' | 'valueKey' | 'type'>\r\n>(props, globalProps);\r\n\r\n/**\r\n * 双向绑定\r\n */\r\nconst model = defineModel<(string | number)[]>();\r\n\r\n/**\r\n * 组件数据\r\n */\r\nconst options: Ref<T[]> = ref([]);\r\n\r\n/**\r\n * 组件data属性改变后清空之前的数据\r\n */\r\nwatch(\r\n  () => propsProxy.data,\r\n  () => {\r\n    options.value = [];\r\n  },\r\n);\r\n\r\nwatchEffect(() => {\r\n  initData(propsProxy.data);\r\n});\r\n\r\n/**\r\n * 初始化组件数据\r\n * @param data 组件数据\r\n */\r\nfunction initData(data: LoadData<T> | (() => LoadData<T>) | undefined) {\r\n  if (!data) {\r\n    options.value = [];\r\n  } else if (Array.isArray(data)) {\r\n    options.value = data;\r\n  } else if (data instanceof Function) {\r\n    loadFunction(data);\r\n  } else if (data instanceof Promise) {\r\n    loadPromise(data);\r\n  } else {\r\n    throw new Error('[liv-web/checkbox]data属性只能是数组、Promise、Callback函数、Getter函数。');\r\n  }\r\n}\r\n\r\n/**\r\n * 通过回调函数的方式加载数据\r\n * @param fn 回调函数\r\n */\r\nfunction loadFunction(fn: Function) {\r\n  if (fn.length === 0) {\r\n    // Getter函数\r\n    initData(fn());\r\n  } else {\r\n    // CallBack函数\r\n    fn((data: T[]) => {\r\n      options.value = data;\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 通过promise的方法加载数据\r\n * @param promise 加载数据promise\r\n */\r\nfunction loadPromise(promise: Promise<T[]>) {\r\n  promise.then(res => (options.value = res));\r\n}\r\n</script>\r\n"],"names":["inject","CHECKBOX_KEY","getPropsPoxy","_useModel","ref","watch","watchEffect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,IAAA,MAAM,WAAc,GAAAA,UAAA,CAAOC,sBAAc,EAAA,EAAE,CAAA,CAAA;AAK3C,IAAA,MAAM,KAAQ,GAAA,OAAA,CAAA;AAUd,IAAM,MAAA,UAAA,GAAaC,kBAEjB,CAAA,KAAA,EAAO,WAAW,CAAA,CAAA;AAKpB,IAAM,MAAA,KAAA,GAAQC,YAAiC,CAAA,OAAA,EAAA,YAAA,CAAA,CAAA;AAK/C,IAAM,MAAA,OAAA,GAAoBC,OAAI,CAAA,EAAE,CAAA,CAAA;AAKhC,IAAAC,SAAA;AAAA,MACE,MAAM,UAAW,CAAA,IAAA;AAAA,MACjB,MAAM;AACJ,QAAA,OAAA,CAAQ,QAAQ,EAAC,CAAA;AAAA,OACnB;AAAA,KACF,CAAA;AAEA,IAAAC,eAAA,CAAY,MAAM;AAChB,MAAA,QAAA,CAAS,WAAW,IAAI,CAAA,CAAA;AAAA,KACzB,CAAA,CAAA;AAMD,IAAA,SAAS,SAAS,IAAqD,EAAA;AACrE,MAAA,IAAI,CAAC,IAAM,EAAA;AACT,QAAA,OAAA,CAAQ,QAAQ,EAAC,CAAA;AAAA,OACR,MAAA,IAAA,KAAA,CAAM,OAAQ,CAAA,IAAI,CAAG,EAAA;AAC9B,QAAA,OAAA,CAAQ,KAAQ,GAAA,IAAA,CAAA;AAAA,OAClB,MAAA,IAAW,gBAAgB,QAAU,EAAA;AACnC,QAAA,YAAA,CAAa,IAAI,CAAA,CAAA;AAAA,OACnB,MAAA,IAAW,gBAAgB,OAAS,EAAA;AAClC,QAAA,WAAA,CAAY,IAAI,CAAA,CAAA;AAAA,OACX,MAAA;AACL,QAAM,MAAA,IAAI,MAAM,uIAA4D,CAAA,CAAA;AAAA,OAC9E;AAAA,KACF;AAMA,IAAA,SAAS,aAAa,EAAc,EAAA;AAClC,MAAI,IAAA,EAAA,CAAG,WAAW,CAAG,EAAA;AAEnB,QAAA,QAAA,CAAS,IAAI,CAAA,CAAA;AAAA,OACR,MAAA;AAEL,QAAA,EAAA,CAAG,CAAC,IAAc,KAAA;AAChB,UAAA,OAAA,CAAQ,KAAQ,GAAA,IAAA,CAAA;AAAA,SACjB,CAAA,CAAA;AAAA,OACH;AAAA,KACF;AAMA,IAAA,SAAS,YAAY,OAAuB,EAAA;AAC1C,MAAA,OAAA,CAAQ,IAAK,CAAA,CAAA,GAAA,KAAQ,OAAQ,CAAA,KAAA,GAAQ,GAAI,CAAA,CAAA;AAAA,KAC3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}