{"version":3,"file":"index.js","sources":["../../../../../packages/utils/qrCode/index.ts"],"sourcesContent":["import { ElMessage } from 'element-plus';\r\nimport { type QRCodeToDataURLOptions, toDataURL } from 'qrcode';\r\n\r\nexport interface QrDownloadOption {\r\n  qrContent: string;\r\n  title: string;\r\n}\r\n\r\ntype QrcodeFn = {\r\n  toDataURL: (content: string, options?: QRCodeToDataURLOptions) => Promise<string>;\r\n  downLoadQRCode: (\r\n    content: string,\r\n    fileName?: string,\r\n    options?: QRCodeToDataURLOptions,\r\n  ) => Promise<void>;\r\n};\r\n\r\nexport const qrCode: QrcodeFn = {\r\n  toDataURL: async (content: string, options?: QRCodeToDataURLOptions) =>\r\n    await toDataURL(content, options),\r\n  downLoadQRCode: async (\r\n    content: string,\r\n    fileName = '二维码.png',\r\n    options?: QRCodeToDataURLOptions,\r\n  ) => {\r\n    try {\r\n      const qrCode = await toDataURL(content, options);\r\n      const link = document.createElement('a');\r\n      link.download = fileName;\r\n      link.href = qrCode;\r\n      link.click();\r\n    } catch (error) {\r\n      ElMessage.error('下载文件失败');\r\n    }\r\n  },\r\n};\r\n"],"names":["toDataURL","qrCode","ElMessage"],"mappings":";;;;;AAiBO,MAAM,MAAmB,GAAA;AAAA,EAC9B,WAAW,OAAO,OAAA,EAAiB,YACjC,MAAMA,gBAAA,CAAU,SAAS,OAAO,CAAA;AAAA,EAClC,cAAgB,EAAA,OACd,OACA,EAAA,QAAA,GAAW,0BACX,OACG,KAAA;AACH,IAAI,IAAA;AACF,MAAA,MAAMC,OAAS,GAAA,MAAMD,gBAAU,CAAA,OAAA,EAAS,OAAO,CAAA,CAAA;AAC/C,MAAM,MAAA,IAAA,GAAO,QAAS,CAAA,aAAA,CAAc,GAAG,CAAA,CAAA;AACvC,MAAA,IAAA,CAAK,QAAW,GAAA,QAAA,CAAA;AAChB,MAAA,IAAA,CAAK,IAAOC,GAAAA,OAAAA,CAAAA;AACZ,MAAA,IAAA,CAAK,KAAM,EAAA,CAAA;AAAA,aACJ,KAAO,EAAA;AACd,MAAAC,qBAAA,CAAU,MAAM,sCAAQ,CAAA,CAAA;AAAA,KAC1B;AAAA,GACF;AACF;;;;"}