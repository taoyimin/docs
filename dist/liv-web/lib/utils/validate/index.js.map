{"version":3,"file":"index.js","sources":["../../../../../packages/utils/validate/index.ts"],"sourcesContent":["import {\r\n  matchNumber,\r\n  matchPassword,\r\n  matchPhone,\r\n  matchIdCard,\r\n  matchLongitude,\r\n  matchLatitude,\r\n  matchEmail,\r\n  MatchDecimalOptions,\r\n  matchDecimal,\r\n} from '../regex';\r\n\r\n/**\r\n * 非空校验\r\n * @remark 纯空格也视为空\r\n * @param rule\r\n * @param value\r\n * @param callback\r\n */\r\nexport const validateNonEmpty = (rule: any, value: any, callback: any) => {\r\n  if (value === undefined || value === null || value.toString().trim() === '') {\r\n    callback(new Error(rule?.message ?? '该项不能为空'));\r\n  } else {\r\n    callback();\r\n  }\r\n};\r\n\r\n/**\r\n * 数字校验\r\n * @param rule\r\n * @param value\r\n * @param callback\r\n */\r\nexport const validateNumber = (rule: any, value: any, callback: any) => {\r\n  if (value === undefined || value === null || value === '') {\r\n    rule.required ? callback(rule?.message ?? '请输入数字') : callback();\r\n  } else {\r\n    if (!matchNumber(value)) {\r\n      callback(new Error(rule?.message ?? '请输入数字'));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * 密码校验（至少8位,至多20位,至少包含1个大写字母、1个小写字母、1个数字和1个特殊字符）\r\n * @param rule\r\n * @param value\r\n * @param callback\r\n */\r\nexport const validatePassword = (rule: any, value: any, callback: any) => {\r\n  if (value === undefined || value === null || value === '') {\r\n    rule.required ? callback(rule?.message ?? '请输入密码') : callback();\r\n  } else {\r\n    if (value === undefined || value === null || value === '') {\r\n      callback(new Error(rule?.message ?? '请输入密码'));\r\n    } else if (value.length < 8) {\r\n      callback(new Error(rule?.message ?? '密码至少8位'));\r\n    } else if (value.length > 20) {\r\n      callback(new Error(rule?.message ?? '密码至多20位'));\r\n    } else if (!matchPassword(value)) {\r\n      callback(new Error(rule?.message ?? '至少包含1个大写字母、1个小写字母、1个数字和1个字符'));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * 手机号校验\r\n * @param rule\r\n * @param value\r\n * @param callback\r\n */\r\nexport const validatePhone = (rule: any, value: any, callback: any) => {\r\n  if (value === undefined || value === null || value === '') {\r\n    rule.required ? callback(rule?.message ?? '请输入手机号') : callback();\r\n  } else {\r\n    if (!matchPhone(value)) {\r\n      callback(new Error(rule?.message ?? '请输入正确的手机号'));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * 身份证校验\r\n * @param rule\r\n * @param value\r\n * @param callback\r\n */\r\nexport const validateIdCard = (rule: any, value: any, callback: any) => {\r\n  if (value === undefined || value === null || value === '') {\r\n    rule.required ? callback(rule?.message ?? '请输入身份证号') : callback();\r\n  } else {\r\n    if (!matchIdCard(value)) {\r\n      callback(new Error(rule?.message ?? '请输入正确的身份证号'));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * 经度校验\r\n * @param rule\r\n * @param value\r\n * @param callback\r\n */\r\nexport const validateLongitude = (rule: any, value: any, callback: any) => {\r\n  if (value === undefined || value === null || value === '') {\r\n    rule.required ? callback(rule?.message ?? '请输入经度') : callback();\r\n  } else {\r\n    if (!matchLongitude(value)) {\r\n      callback(new Error(rule?.message ?? '经度需要在[-180, 180]之内'));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * 纬度校验\r\n * @param rule\r\n * @param value\r\n * @param callback\r\n */\r\nexport const validateLatitude = (rule: any, value: any, callback: any) => {\r\n  if (value === undefined || value === null || value === '') {\r\n    rule.required ? callback(rule?.message ?? '请输入纬度') : callback();\r\n  } else {\r\n    if (!matchLatitude(value)) {\r\n      callback(new Error(rule?.message ?? '纬度需要在[-90, 90]之内'));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * 邮箱校验\r\n * @param rule\r\n * @param value\r\n * @param callback\r\n */\r\nexport const validateEmail = (rule: any, value: any, callback: any) => {\r\n  if (value === undefined || value === null || value === '') {\r\n    rule.required ? callback(rule?.message ?? '请输入邮箱') : callback();\r\n  } else {\r\n    if (!matchEmail(value)) {\r\n      callback(new Error(rule?.message ?? '请输入正确的邮箱'));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * 小数校验\r\n * @param rule\r\n * @param value\r\n * @param callback\r\n */\r\nexport const validateDecimal = (rule: any, value: any, callback: any) => {\r\n  if (value === undefined || value === null || value === '') {\r\n    rule.required ? callback(rule?.message ?? '请输入小数') : callback();\r\n  } else {\r\n    if (!matchDecimal(value, { minDigits: 1 })) {\r\n      callback(new Error(rule?.message ?? '请输入小数'));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * 创建小数校验规则\r\n * @param options 校验参数\r\n */\r\nexport function createValidateDecimal(options?: MatchDecimalOptions) {\r\n  return (rule: any, value: any, callback: any) => {\r\n    if (value === undefined || value === null || value === '') {\r\n      rule.required ? callback(rule?.message ?? '请输入小数') : callback();\r\n    } else {\r\n      if (\r\n        !matchDecimal(value, {\r\n          minDigits: options?.minDigits,\r\n        })\r\n      ) {\r\n        callback(new Error(rule?.message ?? `请输入${options?.minDigits}位以上的小数`));\r\n      } else if (\r\n        !matchDecimal(value, {\r\n          maxDigits: options?.maxDigits,\r\n        })\r\n      ) {\r\n        callback(new Error(rule?.message ?? `请输入${options?.maxDigits}位以内的小数`));\r\n      } else if (\r\n        !matchDecimal(value, {\r\n          min: options?.min,\r\n        })\r\n      ) {\r\n        callback(new Error(rule?.message ?? `请输入大于${options?.min}的小数`));\r\n      } else if (\r\n        !matchDecimal(value, {\r\n          max: options?.max,\r\n        })\r\n      ) {\r\n        callback(new Error(rule?.message ?? `请输入小于${options?.max}的小数`));\r\n      } else {\r\n        callback();\r\n      }\r\n    }\r\n  };\r\n}\r\n"],"names":["matchNumber","matchPassword","matchPhone","matchIdCard","matchLongitude","matchLatitude","matchEmail","matchDecimal"],"mappings":"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"}