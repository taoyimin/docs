{"version":3,"file":"VerifyPoints.vue.mjs","sources":["../../../../../../../packages/components/verify/src/Verify/VerifyPoints.vue"],"sourcesContent":["<template>\r\n  <div style=\"position: relative\">\r\n    <div class=\"verify-img-out\">\r\n      <div\r\n        class=\"verify-img-panel\"\r\n        :style=\"{\r\n          width: setSize.imgWidth,\r\n          height: setSize.imgHeight,\r\n          'background-size': setSize.imgWidth + ' ' + setSize.imgHeight,\r\n          'margin-bottom': vSpace + 'px',\r\n        }\">\r\n        <el-icon\r\n          class=\"verify-refresh\"\r\n          size=\"22\"\r\n          style=\"z-index: 3\"\r\n          @click=\"refresh\"\r\n          v-show=\"showRefresh\">\r\n          <RefreshRight />\r\n        </el-icon>\r\n        <img\r\n          :src=\"'data:image/png;base64,' + pointBackImgBase\"\r\n          ref=\"canvas\"\r\n          alt=\"\"\r\n          style=\"width: 100%; height: 100%; display: block\"\r\n          @click=\"bindingClick ? canvasClick($event) : undefined\" />\r\n\r\n        <div\r\n          v-for=\"(tempPoint, index) in tempPoints\"\r\n          :key=\"index\"\r\n          class=\"point-area\"\r\n          :style=\"{\r\n            'background-color': '#1abd6c',\r\n            color: '#fff',\r\n            'z-index': 9999,\r\n            width: '20px',\r\n            height: '20px',\r\n            'text-align': 'center',\r\n            'line-height': '20px',\r\n            'border-radius': '50%',\r\n            position: 'absolute',\r\n            top: parseInt(tempPoint.y - 10) + 'px',\r\n            left: parseInt(tempPoint.x - 10) + 'px',\r\n          }\">\r\n          {{ index + 1 }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div\r\n      class=\"verify-bar-area\"\r\n      :style=\"{\r\n        width: setSize.imgWidth,\r\n        color: this.barAreaColor,\r\n        'border-color': this.barAreaBorderColor,\r\n        'line-height': this.barSize.height,\r\n      }\">\r\n      <span class=\"verify-msg\">{{ text }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script type=\"text/babel\">\r\n/**\r\n * VerifyPoints\r\n * @description 点选\r\n * */\r\nimport { resetSize, _code_chars, _code_color1, _code_color2 } from './../utils/util.ts';\r\nimport { aesEncrypt } from '@liv-web/utils';\r\nimport {\r\n  computed,\r\n  onMounted,\r\n  reactive,\r\n  ref,\r\n  watch,\r\n  nextTick,\r\n  toRefs,\r\n  watchEffect,\r\n  getCurrentInstance,\r\n} from 'vue';\r\nimport { ElIcon } from 'element-plus';\r\nimport { RefreshRight } from '@element-plus/icons-vue';\r\n\r\nexport default {\r\n  name: 'VerifyPoints',\r\n  components: { ElIcon, RefreshRight },\r\n  props: {\r\n    //弹出式pop，固定fixed\r\n    mode: {\r\n      type: String,\r\n      default: 'fixed',\r\n    },\r\n    captchaType: {\r\n      type: String,\r\n    },\r\n    //间隔\r\n    vSpace: {\r\n      type: Number,\r\n      default: 5,\r\n    },\r\n    imgSize: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          width: '310px',\r\n          height: '155px',\r\n        };\r\n      },\r\n    },\r\n    barSize: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          width: '310px',\r\n          height: '40px',\r\n        };\r\n      },\r\n    },\r\n    reqGet: {\r\n      type: Function,\r\n      required: true,\r\n    },\r\n    reqCheck: {\r\n      type: Function,\r\n      required: true,\r\n    },\r\n  },\r\n  setup(props, context) {\r\n    const { mode, captchaType, vSpace, imgSize, barSize } = toRefs(props);\r\n    const { proxy } = getCurrentInstance();\r\n    let secretKey = ref(''), //后端返回的ase加密秘钥\r\n      checkNum = ref(3), //默认需要点击的字数\r\n      fontPos = reactive([]), //选中的坐标信息\r\n      checkPosArr = reactive([]), //用户点击的坐标\r\n      num = ref(1), //点击的记数\r\n      pointBackImgBase = ref(''), //后端获取到的背景图片\r\n      poinTextList = reactive([]), //后端返回的点击字体顺序\r\n      backToken = ref(''), //后端返回的token值\r\n      setSize = reactive({\r\n        imgHeight: 0,\r\n        imgWidth: 0,\r\n        barHeight: 0,\r\n        barWidth: 0,\r\n      }),\r\n      tempPoints = reactive([]),\r\n      text = ref(''),\r\n      barAreaColor = ref(undefined),\r\n      barAreaBorderColor = ref(undefined),\r\n      showRefresh = ref(true),\r\n      bindingClick = ref(true);\r\n\r\n    const init = () => {\r\n      //加载页面\r\n      fontPos.splice(0, fontPos.length);\r\n      checkPosArr.splice(0, checkPosArr.length);\r\n      num.value = 1;\r\n      getPictrue();\r\n      nextTick(() => {\r\n        let { imgHeight, imgWidth, barHeight, barWidth } = resetSize(proxy);\r\n        setSize.imgHeight = imgHeight;\r\n        setSize.imgWidth = imgWidth;\r\n        setSize.barHeight = barHeight;\r\n        setSize.barWidth = barWidth;\r\n        proxy.$parent.$emit('ready', proxy);\r\n      });\r\n    };\r\n    onMounted(() => {\r\n      // 禁止拖拽\r\n      init();\r\n      proxy.$el.onselectstart = function () {\r\n        return false;\r\n      };\r\n    });\r\n    const canvas = ref(null);\r\n    const canvasClick = e => {\r\n      checkPosArr.push(getMousePos(canvas, e));\r\n      if (num.value == checkNum.value) {\r\n        num.value = createPoint(getMousePos(canvas, e));\r\n        //按比例转换坐标值\r\n        let arr = pointTransfrom(checkPosArr, setSize);\r\n        checkPosArr.length = 0;\r\n        checkPosArr.push(...arr);\r\n        //等创建坐标执行完\r\n        setTimeout(() => {\r\n          // var flag = this.comparePos(this.fontPos, this.checkPosArr);\r\n          //发送后端请求\r\n          var captchaVerification = secretKey.value\r\n            ? aesEncrypt(backToken.value + '---' + JSON.stringify(checkPosArr), secretKey.value)\r\n            : backToken.value + '---' + JSON.stringify(checkPosArr);\r\n          let data = {\r\n            captchaType: captchaType.value,\r\n            pointJson: secretKey.value\r\n              ? aesEncrypt(JSON.stringify(checkPosArr), secretKey.value)\r\n              : JSON.stringify(checkPosArr),\r\n            token: backToken.value,\r\n          };\r\n          if (props.reqCheck) {\r\n            props.reqCheck(data).then(res => {\r\n              if (res.repCode == '0000') {\r\n                barAreaColor.value = '#4cae4c';\r\n                barAreaBorderColor.value = '#5cb85c';\r\n                text.value = '验证成功';\r\n                bindingClick.value = false;\r\n                if (mode.value == 'pop') {\r\n                  setTimeout(() => {\r\n                    proxy.$parent.clickShow = false;\r\n                    refresh();\r\n                  }, 1500);\r\n                }\r\n                proxy.$parent.$emit('success', { captchaVerification });\r\n              } else {\r\n                proxy.$parent.$emit('error', proxy);\r\n                barAreaColor.value = '#d9534f';\r\n                barAreaBorderColor.value = '#d9534f';\r\n                text.value = '验证失败';\r\n                setTimeout(() => {\r\n                  refresh();\r\n                }, 700);\r\n              }\r\n            });\r\n          } else {\r\n            console.error('[liv-web/verify]请检查是否已配置校验验证码方法。');\r\n          }\r\n        }, 400);\r\n      }\r\n      if (num.value < checkNum.value) {\r\n        num.value = createPoint(getMousePos(canvas, e));\r\n      }\r\n    };\r\n    //获取坐标\r\n    const getMousePos = function (obj, e) {\r\n      var x = e.offsetX;\r\n      var y = e.offsetY;\r\n      return { x, y };\r\n    };\r\n    //创建坐标点\r\n    const createPoint = function (pos) {\r\n      tempPoints.push(Object.assign({}, pos));\r\n      return num.value + 1;\r\n    };\r\n    const refresh = function () {\r\n      tempPoints.splice(0, tempPoints.length);\r\n      barAreaColor.value = '#000';\r\n      barAreaBorderColor.value = '#ddd';\r\n      bindingClick.value = true;\r\n      fontPos.splice(0, fontPos.length);\r\n      checkPosArr.splice(0, checkPosArr.length);\r\n      num.value = 1;\r\n      getPictrue();\r\n      text.value = '验证失败';\r\n      showRefresh.value = true;\r\n    };\r\n\r\n    // 请求背景图片和验证图片\r\n    function getPictrue() {\r\n      let data = {\r\n        captchaType: captchaType.value,\r\n      };\r\n      if (props.reqGet) {\r\n        props.reqGet(data).then(res => {\r\n          if (res.repCode == '0000') {\r\n            pointBackImgBase.value = res.repData.originalImageBase64;\r\n            backToken.value = res.repData.token;\r\n            secretKey.value = res.repData.secretKey;\r\n            poinTextList.value = res.repData.wordList;\r\n            text.value = '请依次点击【' + poinTextList.value.join(',') + '】';\r\n          } else {\r\n            text.value = res.repMsg;\r\n          }\r\n        });\r\n      } else {\r\n        console.error('[liv-web/verify]请检查是否已配置获取验证码方法。');\r\n      }\r\n    }\r\n    //坐标转换函数\r\n    const pointTransfrom = function (pointArr, imgSize) {\r\n      var newPointArr = pointArr.map(p => {\r\n        let x = Math.round((310 * p.x) / parseInt(imgSize.imgWidth));\r\n        let y = Math.round((155 * p.y) / parseInt(imgSize.imgHeight));\r\n        return { x, y };\r\n      });\r\n      return newPointArr;\r\n    };\r\n    return {\r\n      secretKey,\r\n      checkNum,\r\n      fontPos,\r\n      checkPosArr,\r\n      num,\r\n      pointBackImgBase,\r\n      poinTextList,\r\n      backToken,\r\n      setSize,\r\n      tempPoints,\r\n      text,\r\n      barAreaColor,\r\n      barAreaBorderColor,\r\n      showRefresh,\r\n      bindingClick,\r\n      init,\r\n      canvas,\r\n      canvasClick,\r\n      getMousePos,\r\n      createPoint,\r\n      refresh,\r\n      getPictrue,\r\n      pointTransfrom,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"names":["imgSize","_openBlock","_createElementBlock","_createElementVNode","_normalizeStyle","_createVNode","_withCtx","_Fragment","_renderList","_toDisplayString"],"mappings":"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"}