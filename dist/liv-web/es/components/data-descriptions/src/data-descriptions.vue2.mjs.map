{"version":3,"file":"data-descriptions.vue2.mjs","sources":["../../../../../../packages/components/data-descriptions/src/data-descriptions.vue"],"sourcesContent":["<template>\r\n  <el-descriptions class=\"liv-data-descriptions\" v-loading=\"loading\" v-bind=\"globalProps\">\r\n    <template v-for=\"field in validFields\" :key=\"field.prop\">\r\n      <el-descriptions-item\r\n        class-name=\"liv-data-descriptions__text\"\r\n        label-align=\"center\"\r\n        v-if=\"!field.fieldType || field.fieldType === 'text'\"\r\n        min-width=\"7vw\"\r\n        v-bind=\"field\"\r\n        >{{ getFormatter(field, componentData?.[field.prop], componentData) }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item\r\n        class-name=\"liv-data-descriptions__ciphertext\"\r\n        label-align=\"center\"\r\n        v-else-if=\"field.fieldType === 'ciphertext'\"\r\n        min-width=\"7vw\"\r\n        v-bind=\"field\"\r\n        >{{\r\n          verifyInfoMap[field.prop].decrypted\r\n            ? verifyInfoMap[field.prop].plaintext\r\n            : getFormatter(field, componentData?.[field.prop], componentData)\r\n        }}\r\n        <el-icon>\r\n          <View v-if=\"verifyInfoMap[field.prop].decrypted\" @click=\"resetCiphertext(field)\" /><Hide\r\n            v-else\r\n            @click=\"verifyInfoMap[field.prop].visible = true\" />\r\n        </el-icon>\r\n        <verify\r\n          v-bind=\"omit(field, Object.keys(descriptionItemProps))\"\r\n          v-model=\"verifyInfoMap[field.prop].visible\"\r\n          @success=\"verifySuccess($event, field)\"></verify>\r\n      </el-descriptions-item>\r\n      <el-descriptions-item\r\n        class-name=\"liv-data-descriptions__tag\"\r\n        label-align=\"center\"\r\n        v-else-if=\"field.fieldType === 'tag'\"\r\n        v-bind=\"pick(field, Object.keys(descriptionItemProps))\">\r\n        <el-tag\r\n          v-bind=\"omit(field, Object.keys(descriptionItemProps))\"\r\n          :type=\"\r\n            typeof field.type === 'function'\r\n              ? field.type(componentData?.[field.prop], componentData!)\r\n              : field.type\r\n          \">\r\n          {{ getFormatter(field, componentData?.[field.prop], componentData) }}\r\n        </el-tag>\r\n      </el-descriptions-item>\r\n      <el-descriptions-item\r\n        class-name=\"liv-data-descriptions__link\"\r\n        label-align=\"center\"\r\n        v-else-if=\"field.fieldType === 'link'\"\r\n        v-bind=\"pick(field, Object.keys(descriptionItemProps))\">\r\n        <el-link\r\n          type=\"primary\"\r\n          :href=\"getFormatter(field, componentData?.[field.prop], componentData)\"\r\n          target=\"_blank\"\r\n          v-bind=\"omit(field, Object.keys(descriptionItemProps))\">\r\n          {{ getFormatter(field, componentData?.[field.prop], componentData) }}\r\n        </el-link>\r\n        <el-button\r\n          text\r\n          type=\"primary\"\r\n          @click=\"copyToClipboard(getFormatter(field, componentData?.[field.prop], componentData))\"\r\n          >复制</el-button\r\n        >\r\n      </el-descriptions-item>\r\n      <el-descriptions-item\r\n        class-name=\"liv-data-descriptions__image\"\r\n        label-align=\"center\"\r\n        v-else-if=\"field.fieldType === 'image'\"\r\n        v-bind=\"pick(field, Object.keys(descriptionItemProps))\">\r\n        <el-image\r\n          v-for=\"(image, index) in (handleThumbUrls ?? handleFileUrls)?.(\r\n            componentData?.[field.prop],\r\n          )\"\r\n          :key=\"image\"\r\n          :preview-src-list=\"handleFileUrls?.(componentData?.[field.prop])\"\r\n          :src=\"image\"\r\n          :initial-index=\"index\"\r\n          fit=\"cover\"\r\n          preview-teleported\r\n          hide-on-click-modal\r\n          v-bind=\"omit(field, Object.keys(descriptionItemProps))\" />\r\n      </el-descriptions-item>\r\n      <el-descriptions-item\r\n        class-name=\"liv-data-descriptions__audio\"\r\n        label-align=\"center\"\r\n        v-else-if=\"field.fieldType === 'audio'\"\r\n        v-bind=\"pick(field, Object.keys(descriptionItemProps))\">\r\n        <audio\r\n          v-for=\"audio in handleFileUrls?.(componentData?.[field.prop])\"\r\n          :key=\"audio\"\r\n          controls\r\n          :src=\"audio\">\r\n          您的浏览器不支持 audio 播放器。\r\n        </audio>\r\n      </el-descriptions-item>\r\n      <el-descriptions-item\r\n        class-name=\"liv-data-descriptions__video\"\r\n        label-align=\"center\"\r\n        v-else-if=\"field.fieldType === 'video'\"\r\n        v-bind=\"pick(field, Object.keys(descriptionItemProps))\">\r\n        <video\r\n          v-for=\"video in handleFileUrls?.(componentData?.[field.prop])\"\r\n          :key=\"video\"\r\n          controls\r\n          :src=\"video\">\r\n          您的浏览器不支持 video 播放器。\r\n        </video>\r\n      </el-descriptions-item>\r\n      <el-descriptions-item\r\n        class-name=\"liv-data-descriptions__file\"\r\n        label-align=\"center\"\r\n        v-else-if=\"field.fieldType === 'file'\"\r\n        v-bind=\"pick(field, Object.keys(descriptionItemProps))\">\r\n        <el-link\r\n          v-for=\"url in handleFileUrls?.(componentData?.[field.prop])\"\r\n          :key=\"url\"\r\n          type=\"primary\"\r\n          :href=\"url\"\r\n          v-bind=\"omit(field, Object.keys(descriptionItemProps))\">\r\n          {{ getFormatter(field, componentData?.[field.prop], componentData) }}</el-link\r\n        >\r\n      </el-descriptions-item>\r\n      <el-descriptions-item\r\n        class-name=\"liv-data-descriptions__qrcode\"\r\n        label-align=\"center\"\r\n        v-else-if=\"field.fieldType === 'qrcode'\"\r\n        v-bind=\"pick(field, Object.keys(descriptionItemProps))\">\r\n        <qr-code\r\n          :content=\"componentData?.[field.prop] ?? ''\"\r\n          v-bind=\"omit(field, Object.keys(descriptionItemProps))\" />\r\n      </el-descriptions-item>\r\n      <el-descriptions-item\r\n        class-name=\"liv-data-descriptions__richtext\"\r\n        label-align=\"center\"\r\n        v-else-if=\"field.fieldType === 'richText'\"\r\n        v-bind=\"pick(field, Object.keys(descriptionItemProps))\">\r\n        <div\r\n          class=\"liv-data-descriptions__richtext--container\"\r\n          :style=\"{ height: field.richTextHeight }\">\r\n          <div\r\n            class=\"liv-data-descriptions__richtext--text\"\r\n            v-bind=\"omit(field, Object.keys(descriptionItemProps))\"\r\n            v-html=\"componentData?.[field.prop]\"></div>\r\n        </div>\r\n      </el-descriptions-item>\r\n      <el-descriptions-item\r\n        class-name=\"liv-data-descriptions__slot\"\r\n        label-align=\"center\"\r\n        v-else-if=\"field.fieldType === 'slot'\"\r\n        v-bind=\"pick(field, Object.keys(descriptionItemProps))\">\r\n        <slot :name=\"field.prop\" :data=\"componentData\"></slot>\r\n      </el-descriptions-item>\r\n    </template>\r\n    <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\r\n      <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n    </template>\r\n  </el-descriptions>\r\n</template>\r\n\r\n<script lang=\"ts\" setup generic=\"T extends Record<string | number | symbol, any>\">\r\nimport { type Ref, computed, ref, toValue, watch, inject } from 'vue';\r\nimport { ElDescriptions, ElDescriptionsItem, ElTag, ElLink, ElButton, ElImage } from 'element-plus';\r\nimport { vLoading, ElIcon } from 'element-plus';\r\nimport { View, Hide } from '@element-plus/icons-vue';\r\n// @ts-ignore\r\nimport { descriptionItemProps } from 'element-plus/es/components/descriptions/src/description-item.mjs';\r\nimport { pick, omit } from 'lodash-es';\r\nimport QrCode from '../../qr-code/src/qr-code.vue';\r\nimport Verify from '../../verify/src/verify.vue';\r\nimport type { VerifyResult } from '../../verify';\r\nimport type {\r\n  CiphertextDescriptionsItemField,\r\n  DataDescriptionsField,\r\n  DataDescriptionsProps,\r\n} from './data-descriptions';\r\nimport {\r\n  checkAuthoritys,\r\n  injectCheckAuthority,\r\n  injectHandleFileUrls,\r\n  injectHandleThumbUrls,\r\n} from '@liv-web/utils';\r\nimport { DATA_DESCRIPTIONS_KEY } from '@liv-web/constants';\r\n\r\n/**\r\n * 组件配置\r\n */\r\ndefineOptions({\r\n  name: 'LivDataDescriptions',\r\n});\r\n\r\n/**\r\n * 注入校验权限方法\r\n */\r\nconst checkAuthority = injectCheckAuthority();\r\n\r\n/**\r\n * 注入处理文件地址方法\r\n */\r\nconst handleFileUrls = injectHandleFileUrls();\r\n\r\n/**\r\n * 注入处理缩略图地址方法\r\n */\r\nconst handleThumbUrls = injectHandleThumbUrls();\r\n\r\n/**\r\n * 全局属性\r\n */\r\nconst globalProps = inject(DATA_DESCRIPTIONS_KEY, {});\r\n\r\n/**\r\n * 组件属性\r\n */\r\nconst props = withDefaults(defineProps<DataDescriptionsProps<T>>(), {\r\n  data: () => ({}) as T,\r\n});\r\n\r\n/**\r\n * 有权限的fields\r\n */\r\nconst validFields = computed<DataDescriptionsField<T>[]>(() => {\r\n  return (toValue(props.fields) as DataDescriptionsField<T>[]).filter(field => {\r\n    return checkAuthoritys(checkAuthority, field.authority);\r\n  });\r\n});\r\n\r\n/**\r\n * 加载状态\r\n */\r\nconst loading = ref(false);\r\n\r\n/**\r\n * 组件数据\r\n */\r\nconst componentData: Ref<T | undefined> = ref();\r\n\r\n/**\r\n * 数据改变后重新加载\r\n */\r\nwatch(\r\n  () => props.data,\r\n  () => {\r\n    if (props.data instanceof Promise) {\r\n      loading.value = true;\r\n      props.data.then(res => (componentData.value = res)).finally(() => (loading.value = false));\r\n    } else {\r\n      componentData.value = props.data;\r\n    }\r\n  },\r\n  {\r\n    immediate: true,\r\n  },\r\n);\r\n\r\n/**\r\n * 获取格式化后的内容\r\n * @param field 描述列表字段配置项\r\n * @param value 当前字段对应的值\r\n * @param data 描述列表数据对象\r\n * @returns 格式化后的字符串\r\n */\r\nfunction getFormatter(\r\n  field: DataDescriptionsField<T>,\r\n  value: T[keyof T],\r\n  data: T | undefined,\r\n): string {\r\n  if (data) {\r\n    return field.formatter?.(value, data) ?? value;\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * 复制文字到剪切板\r\n * @param text 需要复制的文本\r\n */\r\nfunction copyToClipboard(text: string) {\r\n  navigator.clipboard\r\n    .writeText(text)\r\n    .then(() => {})\r\n    .catch(err => {\r\n      console.error('[liv-web/data-descriptions]复制文本到剪切板失败！', err);\r\n    });\r\n}\r\n\r\n/**\r\n * 验证码组件信息\r\n */\r\ninterface VerifyInfo {\r\n  /**\r\n   * 是否已解密\r\n   */\r\n  decrypted: boolean;\r\n  /**\r\n   * 验证码组件可见状态\r\n   */\r\n  visible: boolean;\r\n  /**\r\n   * 明文内容\r\n   */\r\n  plaintext: string;\r\n}\r\n\r\n/**\r\n * 加密文本描述项对应的验证码组件信息\r\n */\r\nconst verifyInfoMap = ref<{ [key: string]: VerifyInfo }>({});\r\n\r\n/**\r\n * 初始化加密文本描述项对应的验证码组件信息\r\n */\r\nwatch(\r\n  validFields,\r\n  () => {\r\n    validFields.value.forEach(field => {\r\n      if (field.fieldType === 'ciphertext' && verifyInfoMap.value[field.prop] === undefined) {\r\n        verifyInfoMap.value[field.prop] = {\r\n          decrypted: false,\r\n          visible: false,\r\n          plaintext: '',\r\n        };\r\n      }\r\n    });\r\n  },\r\n  {\r\n    immediate: true,\r\n  },\r\n);\r\n\r\n/**\r\n * 数据改变后重置加密文本描述项状态\r\n */\r\nwatch(\r\n  () => props.data,\r\n  () => {\r\n    validFields.value.forEach(field => {\r\n      if (field.fieldType === 'ciphertext') {\r\n        verifyInfoMap.value[field.prop] = {\r\n          decrypted: false,\r\n          visible: false,\r\n          plaintext: '',\r\n        };\r\n      }\r\n    });\r\n  },\r\n);\r\n\r\n/**\r\n * 重置加密文本\r\n * @param field 需要重置加密文本的配置项\r\n */\r\nfunction resetCiphertext(field: CiphertextDescriptionsItemField<T>) {\r\n  const verifyInfo = verifyInfoMap.value[field.prop];\r\n  if (verifyInfo) {\r\n    verifyInfo.decrypted = false;\r\n    verifyInfo.plaintext = '';\r\n  }\r\n}\r\n\r\n/**\r\n * 验证码校验成功回调\r\n * @param params 校验结果\r\n * @param field 字段配置项\r\n */\r\nfunction verifySuccess(params: VerifyResult, field: CiphertextDescriptionsItemField<T>) {\r\n  const decryptImpl = field.decrypt?.(params, componentData.value!);\r\n  if (decryptImpl) {\r\n    if (decryptImpl instanceof Promise) {\r\n      decryptImpl.then(res => {\r\n        verifyInfoMap.value[field.prop].decrypted = true;\r\n        verifyInfoMap.value[field.prop].plaintext = res;\r\n      });\r\n    } else if (typeof decryptImpl === 'string') {\r\n      verifyInfoMap.value[field.prop].decrypted = true;\r\n      verifyInfoMap.value[field.prop].plaintext = decryptImpl;\r\n    } else {\r\n      console.error('[liv-web/data-descriptions]请检查传入的解密逻辑是否正确！');\r\n    }\r\n  } else {\r\n    console.error('[liv-web/data-descriptions]当fieldType为ciphertext时，需要传入具体的解密逻辑！');\r\n  }\r\n}\r\n</script>\r\n"],"names":[],"mappings":"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"}