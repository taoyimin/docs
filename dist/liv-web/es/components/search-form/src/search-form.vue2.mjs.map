{"version":3,"file":"search-form.vue2.mjs","sources":["../../../../../../packages/components/search-form/src/search-form.vue"],"sourcesContent":["<template>\r\n  <el-form\r\n    :model=\"props.model\"\r\n    ref=\"formRef\"\r\n    class=\"liv-search-form\"\r\n    :validate-on-rule-change=\"false\"\r\n    v-bind=\"pick(globalProps, Object.keys(formProps))\"\r\n    labelWidth=\"auto\"\r\n    :label-position=\"propsProxy.labelPosition ?? 'right'\"\r\n    :inline=\"false\"\r\n    @keyup.enter=\"handleKeyupEnter\">\r\n    <el-config-provider :locale=\"zhCn\">\r\n      <div class=\"liv-search-form__content\" v-if=\"validFields.length > 0\">\r\n        <div class=\"liv-search-form__content--form\">\r\n          <template v-for=\"row in expandFields\">\r\n            <el-row :gutter=\"20\">\r\n              <el-col :span=\"24 / propsProxy.column\" v-for=\"field in row\">\r\n                <component v-if=\"isVNode(field)\" :is=\"field\"></component>\r\n                <template\r\n                  v-else-if=\"field.fieldType === 'numberRange' && Array.isArray(field.prop)\">\r\n                  <form-item\r\n                    v-bind=\"field\"\r\n                    :modelValue=\"[props.model[field.prop[0]], props.model[field.prop[1]]] as any\"\r\n                    v-model:min-value=\"props.model[field.prop[0]]\"\r\n                    v-model:max-value=\"props.model[field.prop[1]]\">\r\n                  </form-item>\r\n                </template>\r\n                <template v-else-if=\"field.fieldType === 'slot'\">\r\n                  <form-item v-bind=\"field\">\r\n                    <template v-for=\"(_, name) in omit($slots, 'default')\" #[name]=\"slotData\">\r\n                      <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n                    </template>\r\n                  </form-item>\r\n                </template>\r\n                <form-item\r\n                  v-else-if=\"field.fieldType\"\r\n                  v-bind=\"field\"\r\n                  v-model=\"props.model[field.prop as string]\">\r\n                </form-item>\r\n              </el-col>\r\n            </el-row>\r\n          </template>\r\n          <el-collapse-transition>\r\n            <div v-show=\"isExpand\">\r\n              <template v-for=\"row in foldFields\">\r\n                <el-row :gutter=\"20\">\r\n                  <el-col :span=\"24 / propsProxy.column\" v-for=\"field in row\">\r\n                    <component v-if=\"isVNode(field)\" :is=\"field\"></component>\r\n                    <template v-else-if=\"field.fieldType === 'numberRange'\">\r\n                      <form-item\r\n                        v-bind=\"field\"\r\n                        :modelValue=\"\r\n                          [props.model[field.prop[0]], props.model[field.prop[1]]] as any\r\n                        \"\r\n                        v-model:min-value=\"props.model[field.prop[0]]\"\r\n                        v-model:max-value=\"props.model[field.prop[1]]\">\r\n                      </form-item>\r\n                    </template>\r\n                    <template v-else-if=\"field.fieldType === 'slot'\">\r\n                      <form-item v-bind=\"field\">\r\n                        <template v-for=\"(_, name) in omit($slots, 'default')\" #[name]=\"slotData\">\r\n                          <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n                        </template>\r\n                      </form-item>\r\n                    </template>\r\n                    <form-item\r\n                      v-else-if=\"field.fieldType\"\r\n                      v-bind=\"field\"\r\n                      v-model=\"props.model[field.prop]\">\r\n                    </form-item>\r\n                  </el-col>\r\n                </el-row>\r\n              </template>\r\n            </div>\r\n          </el-collapse-transition>\r\n        </div>\r\n        <el-form-item class=\"liv-search-form__content--expand\">\r\n          <el-button v-if=\"foldFields.length > 0\" link type=\"primary\" @click=\"isExpand = !isExpand\">\r\n            {{ isExpand ? '收缩' : '展开' }}\r\n            <el-icon :data-expand=\"isExpand\">\r\n              <ArrowDown />\r\n            </el-icon>\r\n          </el-button>\r\n        </el-form-item>\r\n        <el-form-item class=\"liv-search-form__content--divider\">\r\n          <div></div>\r\n        </el-form-item>\r\n        <div class=\"liv-search-form__content--button\" :data-single-line=\"expandFields.length <= 1\">\r\n          <el-button\r\n            v-for=\"button in validRightButtons\"\r\n            :key=\"button.name\"\r\n            @click=\"handleButtonClick(button)\"\r\n            v-bind=\"omit(button, ['onClick'])\"\r\n            :plain=\"button.plain ?? true\"\r\n            :loading=\"buttonLoadingStatus[button.key!] ?? false\">\r\n            {{ button.name }}</el-button\r\n          >\r\n        </div>\r\n      </div>\r\n      <el-divider class=\"liv-search-form__divider\" v-if=\"validFields.length > 0\" />\r\n      <div class=\"liv-search-form__footer\">\r\n        <div>\r\n          <el-button\r\n            v-for=\"button in validBottomLeftButtons\"\r\n            :key=\"button.name\"\r\n            @click=\"handleButtonClick(button)\"\r\n            v-bind=\"omit(button, ['onClick'])\"\r\n            :plain=\"button.plain ?? true\"\r\n            :loading=\"buttonLoadingStatus[button.key!] ?? false\">\r\n            {{ button.name }}</el-button\r\n          >\r\n        </div>\r\n        <div>\r\n          <el-button\r\n            v-for=\"button in validBottomRightButtons\"\r\n            :key=\"button.name\"\r\n            @click=\"handleButtonClick(button)\"\r\n            v-bind=\"omit(button, ['onClick'])\"\r\n            :plain=\"button.plain ?? false\"\r\n            :loading=\"buttonLoadingStatus[button.key!] ?? false\">\r\n            {{ button.name }}</el-button\r\n          >\r\n        </div>\r\n      </div>\r\n      <el-dialog title=\"导入\" v-model=\"importDialogVisible\" class=\"liv-search-form__dialog\">\r\n        <el-upload\r\n          v-model:file-list=\"fileList\"\r\n          drag\r\n          :auto-upload=\"false\"\r\n          :show-file-list=\"false\"\r\n          :limit=\"1\"\r\n          @change=\"fileChange\">\r\n          <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\r\n          <div class=\"el-upload__text\">将文件拖拽到此处 或者 <em>点击上传</em></div>\r\n          <template #tip v-if=\"propsProxy.importOptions?.tip\">\r\n            <div class=\"el-upload__tip\">{{ propsProxy.importOptions.tip }}</div>\r\n          </template>\r\n        </el-upload>\r\n        <el-row v-if=\"props.onTemplate\" justify=\"center\" class=\"liv-search-form__dialog--template\">\r\n          <el-button type=\"primary\" @click=\"handleDownloadTemplate\">下载导入模板</el-button>\r\n        </el-row>\r\n      </el-dialog>\r\n    </el-config-provider>\r\n  </el-form>\r\n</template>\r\n<script\r\n  lang=\"ts\"\r\n  setup\r\n  generic=\"T extends Record<string | number | symbol, any>, U extends SearchFormFields<T>\">\r\nimport { ref, watchEffect, useAttrs, computed, useSlots, isVNode, type VNode, inject } from 'vue';\r\nimport {\r\n  ElForm,\r\n  ElFormItem,\r\n  ElIcon,\r\n  ElButton,\r\n  ElRow,\r\n  ElCol,\r\n  ElCollapseTransition,\r\n  ElDivider,\r\n  ElUpload,\r\n  ElDialog,\r\n  ElMessage,\r\n  formProps,\r\n  type FormInstance as ElFormInstance,\r\n  type UploadFile,\r\n} from 'element-plus';\r\n// @ts-ignore\r\nimport zhCn from 'element-plus/dist/locale/zh-cn.mjs';\r\nimport {\r\n  ElConfigProvider,\r\n  type FormItemProp,\r\n  type FormValidateCallback,\r\n  type FormValidationResult,\r\n} from 'element-plus';\r\nimport {\r\n  ArrowDown,\r\n  Delete,\r\n  Plus,\r\n  Search,\r\n  Folder,\r\n  RefreshRight,\r\n  UploadFilled,\r\n} from '@element-plus/icons-vue';\r\nimport type {\r\n  SearchFormButton,\r\n  SearchFormField,\r\n  SearchFormFields,\r\n  SearchFormFullProps,\r\n  SearchFormImportButton,\r\n  SearchFormProps,\r\n} from './search-form';\r\nimport FormItem from '../../form-item/src/form-item.vue';\r\nimport { chunk, omit, pick } from 'lodash-es';\r\nimport {\r\n  MakeRequired,\r\n  checkAuthoritys,\r\n  getPropsPoxy,\r\n  injectCheckAuthority,\r\n  sortByOrder,\r\n} from '@liv-web/utils';\r\nimport { SEARCH_FORM_KEY } from '@liv-web/constants';\r\n\r\n/**\r\n * 组件配置\r\n */\r\ndefineOptions({\r\n  name: 'LivSearchForm',\r\n});\r\n\r\n/**\r\n * 注入全局属性\r\n */\r\nconst globalProps = inject<SearchFormFullProps<T>>(SEARCH_FORM_KEY, {});\r\n\r\n/**\r\n * 组件属性\r\n */\r\nconst props = withDefaults(defineProps<SearchFormProps<T, U>>(), {\r\n  fields: () => [] as unknown as U,\r\n  buttons: () => [] as SearchFormButton<T>[],\r\n  column: () => 3,\r\n  showReset: () => true,\r\n  importOptions: () => {\r\n    return {\r\n      extensions: ['xls', 'xlsx'],\r\n    };\r\n  },\r\n});\r\n\r\n/**\r\n * 属性代理\r\n */\r\nconst propsProxy = getPropsPoxy<MakeRequired<SearchFormFullProps<T>, 'column' | 'showReset'>>(\r\n  props,\r\n  globalProps,\r\n);\r\n\r\n/**\r\n * 注入权限校验方法\r\n */\r\nconst checkAuthority = injectCheckAuthority();\r\n\r\n/**\r\n * 组件参数\r\n */\r\nconst attrs = useAttrs();\r\n\r\n/**\r\n * 是否展开\r\n */\r\nconst isExpand = ref(false);\r\n\r\n/**\r\n * 表单实例\r\n */\r\nconst formRef = ref<ElFormInstance | null>(null);\r\n\r\n/**\r\n * 组件插槽\r\n */\r\nconst slots = useSlots();\r\n\r\n/**\r\n * 通过default插槽传入的虚拟节点\r\n */\r\nconst vNodes = computed(() => {\r\n  return slots['default'] ? slots['default']() : [];\r\n});\r\n\r\n/**\r\n * 按钮的加载状态\r\n */\r\nconst buttonLoadingStatus = ref<Record<string | symbol, boolean>>({});\r\n\r\n/**\r\n * 导入文件列表\r\n * @remark 最多只能选中一个文件进行导入\r\n */\r\nconst fileList = ref<UploadFile[]>([]);\r\n\r\n/**\r\n * 是否显示导入弹窗\r\n */\r\nconst importDialogVisible = ref(false);\r\n\r\n/**\r\n * 处理模板下载方法\r\n */\r\nfunction handleDownloadTemplate() {\r\n  const result = propsProxy.onTemplate!();\r\n  if (typeof result === 'string') {\r\n    const link = document.createElement('a');\r\n    link.href = result;\r\n    link.download = '';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  } else if (result instanceof Promise) {\r\n    result.then();\r\n  }\r\n}\r\n\r\n/**\r\n * 选中导入文件后的回调方法\r\n * @param uploadFile 选中的文件\r\n */\r\nfunction fileChange(uploadFile: UploadFile) {\r\n  if (\r\n    propsProxy.importOptions?.extensions &&\r\n    !propsProxy.importOptions.extensions.find((ext: string) => uploadFile.name.endsWith(ext))\r\n  ) {\r\n    ElMessage.error(\r\n      `只允许上传文件扩展名为${propsProxy.importOptions?.extensions.join('、')}的文件！`,\r\n    );\r\n    fileList.value = [];\r\n    return;\r\n  } else if (\r\n    propsProxy.importOptions?.maxSize &&\r\n    uploadFile.size &&\r\n    uploadFile.size > propsProxy.importOptions.maxSize\r\n  ) {\r\n    ElMessage.error(\r\n      `上传文件大小不能超过${propsProxy.importOptions.maxSize >= 1024 * 1024 ? propsProxy.importOptions.maxSize / 1024 / 1024 + 'M' : propsProxy.importOptions.maxSize / 1024 + 'KB'}！`,\r\n    );\r\n    fileList.value = [];\r\n    return;\r\n  }\r\n  importDialogVisible.value = false;\r\n  buttonLoadingStatus.value[importButton.key!] = true;\r\n  const result = importButton.handleImport!(uploadFile.raw as File);\r\n  if (result instanceof Promise) {\r\n    result\r\n      .then(res => {\r\n        if (typeof res === 'string') {\r\n          ElMessage.success(res);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (typeof err === 'string') {\r\n          ElMessage.error(err);\r\n        } else {\r\n          throw err;\r\n        }\r\n      })\r\n      .finally(() => {\r\n        buttonLoadingStatus.value[importButton.key!] = false;\r\n        fileList.value = [];\r\n      });\r\n  }\r\n}\r\n\r\n/**\r\n * 有效的fields\r\n */\r\nconst validFields = computed(() => {\r\n  const fields: (SearchFormField<T> | VNode)[] = props.fields.filter(\r\n    field =>\r\n      field.fieldType && field.show !== false && checkAuthoritys(checkAuthority, field.authority),\r\n  );\r\n  // 将通过default插槽传入的虚拟节点插入二维数组对应位置\r\n  vNodes.value.forEach(vNode => {\r\n    const fieldIndex: number | undefined = vNode.props\r\n      ? (vNode.props['field-index'] ?? vNode.props['fieldIndex'])\r\n      : undefined;\r\n    if (fieldIndex !== undefined && fieldIndex < fields.length) {\r\n      fields.splice(fieldIndex, 0, vNode);\r\n    } else {\r\n      fields.push(vNode);\r\n    }\r\n  });\r\n  // 转换为二维数组\r\n  return chunk(fields, propsProxy.column);\r\n});\r\n\r\n/**\r\n * 默认展开展示的配置项\r\n */\r\nconst expandFields = computed(() => {\r\n  return validFields.value.slice(0, 2);\r\n});\r\n\r\n/**\r\n * 默认折叠不展示的配置项\r\n */\r\nconst foldFields = computed(() => {\r\n  return validFields.value.slice(2);\r\n});\r\n\r\n/**\r\n * 初始化表单项配置副作用\r\n */\r\nwatchEffect(() => {\r\n  props.fields.forEach(field => {\r\n    if (field.watchEffect) {\r\n      watchEffect(() => {\r\n        // @ts-ignore\r\n        field.watchEffect?.(props.model, formRef.value);\r\n      });\r\n    }\r\n  });\r\n});\r\n\r\n/**\r\n * 初始化操作按钮副作用\r\n */\r\nwatchEffect(() => {\r\n  props.buttons.forEach(button => {\r\n    if (button.watchEffect) {\r\n      watchEffect(() => {\r\n        // @ts-ignore\r\n        button.watchEffect?.(props.model, formRef.value);\r\n      });\r\n    }\r\n  });\r\n});\r\n\r\n/**\r\n * 内置按钮默认属性映射\r\n */\r\nconst innerButtonMap: {\r\n  onSearch: SearchFormButton<T>;\r\n  onReset: SearchFormButton<T>;\r\n  onAdd: SearchFormButton<T>;\r\n  onBatchDelete: SearchFormButton<T>;\r\n  onImport: SearchFormButton<T>;\r\n  onExport: SearchFormButton<T>;\r\n} = {\r\n  onSearch: {\r\n    name: '查询',\r\n    type: 'primary',\r\n    order: 1,\r\n    validate: true,\r\n    icon: Search,\r\n    key: Symbol(),\r\n  },\r\n  onReset: {\r\n    name: '重置',\r\n    type: 'warning',\r\n    order: 2,\r\n    icon: RefreshRight,\r\n    key: Symbol(),\r\n    onClick: () => resetFields(),\r\n  },\r\n  onAdd: {\r\n    name: '新增',\r\n    type: 'success',\r\n    order: 10,\r\n    icon: Plus,\r\n    key: Symbol(),\r\n  },\r\n  onBatchDelete: {\r\n    name: '批量删除',\r\n    type: 'danger',\r\n    order: 20,\r\n    icon: Delete,\r\n    key: Symbol(),\r\n  },\r\n  onImport: {\r\n    name: '导入',\r\n    type: 'primary',\r\n    order: 30,\r\n    icon: Folder,\r\n    key: Symbol(),\r\n    onClick: () => {\r\n      importDialogVisible.value = true;\r\n    },\r\n  },\r\n  onExport: {\r\n    name: '导出',\r\n    type: 'primary',\r\n    order: 40,\r\n    icon: Folder,\r\n    key: Symbol(),\r\n    position: 'right',\r\n    plain: false,\r\n  },\r\n};\r\n\r\n/**\r\n * 初始化内置按钮\r\n * @param type 需要初始化的内置按钮类型\r\n * @returns { SearchFormButton<T> } 表单操作按钮\r\n */\r\nfunction initInnerButton(\r\n  type: 'onSearch' | 'onReset' | 'onAdd' | 'onBatchDelete' | 'onImport' | 'onExport',\r\n): SearchFormButton<T> | SearchFormImportButton<T> {\r\n  const button: SearchFormButton<T> = {\r\n    ...innerButtonMap[type],\r\n  };\r\n  if (props[type]) {\r\n    // 有事件但没有拼接权限标识\r\n    if (type !== 'onImport') {\r\n      button.onClick = props[type];\r\n    } else {\r\n      (button as SearchFormImportButton<T>).handleImport = props[type];\r\n    }\r\n  } else {\r\n    const key = Object.keys(attrs).find(key => key.startsWith(type));\r\n    const regex = /\\((.*?)\\)/;\r\n    const matches = key?.match(regex);\r\n    if (matches && matches[1]) {\r\n      // 有事件并且拼接了权限标识\r\n      if (type !== 'onImport') {\r\n        button.onClick = attrs[key!] as SearchFormButton<T>['onClick'];\r\n      } else {\r\n        (button as SearchFormImportButton<T>).handleImport = attrs[\r\n          key!\r\n        ] as SearchFormImportButton<T>['handleImport'];\r\n      }\r\n      button.authority = matches[1].split('|');\r\n    } else {\r\n      button.show = false;\r\n    }\r\n  }\r\n  return button;\r\n}\r\n\r\n/**\r\n * 内置右侧操作按钮\r\n */\r\nconst innerRightButtons = computed<SearchFormButton<T>[]>(() => {\r\n  if (propsProxy.showReset) {\r\n    return [initInnerButton('onSearch'), initInnerButton('onReset')];\r\n  } else {\r\n    return [initInnerButton('onSearch')];\r\n  }\r\n});\r\n\r\n/**\r\n * 需要展示的右侧操作按钮\r\n */\r\nconst validRightButtons = computed(() => {\r\n  return innerRightButtons.value\r\n    .filter(button => {\r\n      return checkAuthoritys(checkAuthority, button.authority);\r\n    })\r\n    .sort((a, b) => sortByOrder(a.order, b.order));\r\n});\r\n\r\n/**\r\n * 内置导入按钮\r\n */\r\nconst importButton = initInnerButton('onImport') as SearchFormImportButton<T>;\r\n\r\n/**\r\n * 内置底部操作按钮\r\n */\r\nconst innerBottomButtons = computed<SearchFormButton<T>[]>(() => {\r\n  return [\r\n    initInnerButton('onAdd'),\r\n    initInnerButton('onBatchDelete'),\r\n    importButton,\r\n    initInnerButton('onExport'),\r\n  ];\r\n});\r\n\r\n/**\r\n * 需要展示的底部左侧操作按钮\r\n */\r\nconst validBottomLeftButtons = computed(() => {\r\n  return innerBottomButtons.value\r\n    .concat(props.buttons)\r\n    .filter(button => {\r\n      return (\r\n        button.position !== 'right' &&\r\n        button.show !== false &&\r\n        checkAuthoritys(checkAuthority, button.authority)\r\n      );\r\n    })\r\n    .sort((a, b) => sortByOrder(a.order, b.order))\r\n    .map(button => {\r\n      if (!button.key) {\r\n        button.key = Symbol();\r\n      }\r\n      return button;\r\n    });\r\n});\r\n\r\n/**\r\n * 需要展示的底部右侧操作按钮\r\n */\r\nconst validBottomRightButtons = computed(() => {\r\n  return innerBottomButtons.value\r\n    .concat(props.buttons)\r\n    .filter(button => {\r\n      return (\r\n        button.position === 'right' &&\r\n        button.show !== false &&\r\n        checkAuthoritys(checkAuthority, button.authority)\r\n      );\r\n    })\r\n    .sort((a, b) => sortByOrder(a.order, b.order))\r\n    .map(button => {\r\n      if (!button.key) {\r\n        button.key = Symbol();\r\n      }\r\n      return button;\r\n    });\r\n});\r\n\r\n/**\r\n * 处理按钮点击事件\r\n * @param button 点击的按钮\r\n */\r\nfunction handleButtonClick(button: SearchFormButton<T>) {\r\n  if (button.validate) {\r\n    formRef.value?.validate((valid, _fields) => {\r\n      if (valid) {\r\n        triggerEvent(button);\r\n      }\r\n    });\r\n  } else {\r\n    triggerEvent(button);\r\n  }\r\n}\r\n\r\n/**\r\n * 触发事件\r\n * @param button 需要触发事件的按钮\r\n */\r\nfunction triggerEvent(button: SearchFormButton<T>) {\r\n  if (button === importButton) {\r\n    (button as SearchFormImportButton<T>).onClick!();\r\n  } else {\r\n    // @ts-ignore\r\n    const result = button.onClick?.(props.model, formRef.value);\r\n    if (result instanceof Promise) {\r\n      buttonLoadingStatus.value[button.key!] = true;\r\n      result\r\n        .then(res => {\r\n          if (typeof res === 'string') {\r\n            ElMessage.success(res);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if (typeof err === 'string') {\r\n            ElMessage.error(err);\r\n          } else {\r\n            throw err;\r\n          }\r\n        })\r\n        .finally(() => {\r\n          buttonLoadingStatus.value[button.key!] = false;\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 回车键事件\r\n */\r\nfunction handleKeyupEnter() {\r\n  const searchButton = validRightButtons.value.find(button => button.name === '查询');\r\n  if (!searchButton) return;\r\n  handleButtonClick(searchButton);\r\n}\r\n\r\n/**\r\n * 校验表单\r\n * @param callback 校验结果回调方法\r\n * @returns 校验结果Promise\r\n */\r\nfunction validate(callback?: FormValidateCallback): FormValidationResult {\r\n  return formRef.value!.validate(callback);\r\n}\r\n\r\n/**\r\n * 校验部分字段\r\n * @param props 需要校验的字段\r\n * @param callback 校验结果\r\n */\r\nfunction validateField(\r\n  props?: FormItemProp | FormItemProp[] | undefined,\r\n  callback?: FormValidateCallback | undefined,\r\n): FormValidationResult {\r\n  return formRef.value!.validateField(props, callback);\r\n}\r\n\r\n/**\r\n * 滚动到指定字段\r\n * @param prop 需要滚动到的字段\r\n */\r\nfunction scrollToField(prop: FormItemProp): void {\r\n  formRef.value?.scrollToField(prop);\r\n}\r\n\r\n/**\r\n * 清空校验结果\r\n * @param props 需要清空校验结果的字段\r\n */\r\nfunction clearValidate(props?: FormItemProp | FormItemProp[] | undefined): void {\r\n  formRef.value?.clearValidate(props);\r\n}\r\n\r\n/**\r\n * 重置表单\r\n * @param props 需要重置的字段\r\n */\r\nfunction resetFields(props?: FormItemProp | FormItemProp[] | undefined): void {\r\n  formRef.value?.resetFields(props);\r\n}\r\n\r\n/**\r\n * 对外暴露的方法\r\n */\r\ndefineExpose({\r\n  validate,\r\n  validateField,\r\n  resetFields,\r\n  scrollToField,\r\n  clearValidate,\r\n});\r\n</script>\r\n"],"names":["key","props"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoNA,IAAA,MAAM,WAAc,GAAA,MAAA,CAA+B,eAAiB,EAAA,EAAE,CAAA,CAAA;AAKtE,IAAA,MAAM,KAAQ,GAAA,OAAA,CAAA;AAed,IAAA,MAAM,UAAa,GAAA,YAAA;AAAA,MACjB,KAAA;AAAA,MACA,WAAA;AAAA,KACF,CAAA;AAKA,IAAA,MAAM,iBAAiB,oBAAqB,EAAA,CAAA;AAK5C,IAAA,MAAM,QAAQ,QAAS,EAAA,CAAA;AAKvB,IAAM,MAAA,QAAA,GAAW,IAAI,KAAK,CAAA,CAAA;AAK1B,IAAM,MAAA,OAAA,GAAU,IAA2B,IAAI,CAAA,CAAA;AAK/C,IAAA,MAAM,QAAQ,QAAS,EAAA,CAAA;AAKvB,IAAM,MAAA,MAAA,GAAS,SAAS,MAAM;AAC5B,MAAA,OAAO,MAAM,SAAS,CAAA,GAAI,MAAM,SAAS,CAAA,KAAM,EAAC,CAAA;AAAA,KACjD,CAAA,CAAA;AAKD,IAAM,MAAA,mBAAA,GAAsB,GAAsC,CAAA,EAAE,CAAA,CAAA;AAMpE,IAAM,MAAA,QAAA,GAAW,GAAkB,CAAA,EAAE,CAAA,CAAA;AAKrC,IAAM,MAAA,mBAAA,GAAsB,IAAI,KAAK,CAAA,CAAA;AAKrC,IAAA,SAAS,sBAAyB,GAAA;AAChC,MAAM,MAAA,MAAA,GAAS,WAAW,UAAY,EAAA,CAAA;AACtC,MAAI,IAAA,OAAO,WAAW,QAAU,EAAA;AAC9B,QAAM,MAAA,IAAA,GAAO,QAAS,CAAA,aAAA,CAAc,GAAG,CAAA,CAAA;AACvC,QAAA,IAAA,CAAK,IAAO,GAAA,MAAA,CAAA;AACZ,QAAA,IAAA,CAAK,QAAW,GAAA,EAAA,CAAA;AAChB,QAAS,QAAA,CAAA,IAAA,CAAK,YAAY,IAAI,CAAA,CAAA;AAC9B,QAAA,IAAA,CAAK,KAAM,EAAA,CAAA;AACX,QAAS,QAAA,CAAA,IAAA,CAAK,YAAY,IAAI,CAAA,CAAA;AAAA,OAChC,MAAA,IAAW,kBAAkB,OAAS,EAAA;AACpC,QAAA,MAAA,CAAO,IAAK,EAAA,CAAA;AAAA,OACd;AAAA,KACF;AAMA,IAAA,SAAS,WAAW,UAAwB,EAAA;;AAC1C,MAAA,IAAA,CAAA,CACE,gBAAW,aAAX,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAA0B,UAC1B,KAAA,CAAC,WAAW,aAAc,CAAA,UAAA,CAAW,IAAK,CAAA,CAAC,QAAgB,UAAW,CAAA,IAAA,CAAK,QAAS,CAAA,GAAG,CAAC,CACxF,EAAA;AACA,QAAU,SAAA,CAAA,KAAA;AAAA,UACR,sEAAc,EAAW,GAAA,UAAA,CAAA,aAAA,KAAX,IAA0B,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAA,CAAW,KAAK,QAAI,CAAA,CAAA,wBAAA,CAAA;AAAA,SAC9D,CAAA;AACA,QAAA,QAAA,CAAS,QAAQ,EAAC,CAAA;AAClB,QAAA,OAAA;AAAA,OACF,MAAA,IAAA,CAAA,CACE,EAAW,GAAA,UAAA,CAAA,aAAA,KAAX,IAA0B,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAA,KAC1B,UAAW,CAAA,IAAA,IACX,UAAW,CAAA,IAAA,GAAO,UAAW,CAAA,aAAA,CAAc,OAC3C,EAAA;AACA,QAAU,SAAA,CAAA,KAAA;AAAA,UACR,+DAAa,UAAW,CAAA,aAAA,CAAc,OAAW,IAAA,IAAA,GAAO,OAAO,UAAW,CAAA,aAAA,CAAc,OAAU,GAAA,IAAA,GAAO,OAAO,GAAM,GAAA,UAAA,CAAW,aAAc,CAAA,OAAA,GAAU,OAAO,IAAI,CAAA,MAAA,CAAA;AAAA,SACtK,CAAA;AACA,QAAA,QAAA,CAAS,QAAQ,EAAC,CAAA;AAClB,QAAA,OAAA;AAAA,OACF;AACA,MAAA,mBAAA,CAAoB,KAAQ,GAAA,KAAA,CAAA;AAC5B,MAAoB,mBAAA,CAAA,KAAA,CAAM,YAAa,CAAA,GAAI,CAAI,GAAA,IAAA,CAAA;AAC/C,MAAA,MAAM,MAAS,GAAA,YAAA,CAAa,YAAc,CAAA,UAAA,CAAW,GAAW,CAAA,CAAA;AAChE,MAAA,IAAI,kBAAkB,OAAS,EAAA;AAC7B,QAAA,MAAA,CACG,KAAK,CAAO,GAAA,KAAA;AACX,UAAI,IAAA,OAAO,QAAQ,QAAU,EAAA;AAC3B,YAAA,SAAA,CAAU,QAAQ,GAAG,CAAA,CAAA;AAAA,WACvB;AAAA,SACD,CACA,CAAA,KAAA,CAAM,CAAO,GAAA,KAAA;AACZ,UAAI,IAAA,OAAO,QAAQ,QAAU,EAAA;AAC3B,YAAA,SAAA,CAAU,MAAM,GAAG,CAAA,CAAA;AAAA,WACd,MAAA;AACL,YAAM,MAAA,GAAA,CAAA;AAAA,WACR;AAAA,SACD,CACA,CAAA,OAAA,CAAQ,MAAM;AACb,UAAoB,mBAAA,CAAA,KAAA,CAAM,YAAa,CAAA,GAAI,CAAI,GAAA,KAAA,CAAA;AAC/C,UAAA,QAAA,CAAS,QAAQ,EAAC,CAAA;AAAA,SACnB,CAAA,CAAA;AAAA,OACL;AAAA,KACF;AAKA,IAAM,MAAA,WAAA,GAAc,SAAS,MAAM;AACjC,MAAM,MAAA,MAAA,GAAyC,MAAM,MAAO,CAAA,MAAA;AAAA,QAC1D,CAAA,KAAA,KACE,MAAM,SAAa,IAAA,KAAA,CAAM,SAAS,KAAS,IAAA,eAAA,CAAgB,cAAgB,EAAA,KAAA,CAAM,SAAS,CAAA;AAAA,OAC9F,CAAA;AAEA,MAAO,MAAA,CAAA,KAAA,CAAM,QAAQ,CAAS,KAAA,KAAA;;AAC5B,QAAM,MAAA,UAAA,GAAiC,KAAM,CAAA,KAAA,GAAA,CACxC,EAAM,GAAA,KAAA,CAAA,KAAA,CAAM,aAAa,CAAA,KAAzB,IAA8B,GAAA,EAAA,GAAA,KAAA,CAAM,KAAM,CAAA,YAAY,CACvD,GAAA,KAAA,CAAA,CAAA;AACJ,QAAA,IAAI,UAAe,KAAA,KAAA,CAAA,IAAa,UAAa,GAAA,MAAA,CAAO,MAAQ,EAAA;AAC1D,UAAO,MAAA,CAAA,MAAA,CAAO,UAAY,EAAA,CAAA,EAAG,KAAK,CAAA,CAAA;AAAA,SAC7B,MAAA;AACL,UAAA,MAAA,CAAO,KAAK,KAAK,CAAA,CAAA;AAAA,SACnB;AAAA,OACD,CAAA,CAAA;AAED,MAAO,OAAA,KAAA,CAAM,MAAQ,EAAA,UAAA,CAAW,MAAM,CAAA,CAAA;AAAA,KACvC,CAAA,CAAA;AAKD,IAAM,MAAA,YAAA,GAAe,SAAS,MAAM;AAClC,MAAA,OAAO,WAAY,CAAA,KAAA,CAAM,KAAM,CAAA,CAAA,EAAG,CAAC,CAAA,CAAA;AAAA,KACpC,CAAA,CAAA;AAKD,IAAM,MAAA,UAAA,GAAa,SAAS,MAAM;AAChC,MAAO,OAAA,WAAA,CAAY,KAAM,CAAA,KAAA,CAAM,CAAC,CAAA,CAAA;AAAA,KACjC,CAAA,CAAA;AAKD,IAAA,WAAA,CAAY,MAAM;AAChB,MAAM,KAAA,CAAA,MAAA,CAAO,QAAQ,CAAS,KAAA,KAAA;AAC5B,QAAA,IAAI,MAAM,WAAa,EAAA;AACrB,UAAA,WAAA,CAAY,MAAM;;AAEhB,YAAA,CAAA,EAAA,GAAA,KAAA,CAAM,WAAN,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,KAAA,EAAoB,KAAM,CAAA,KAAA,EAAO,OAAQ,CAAA,KAAA,CAAA,CAAA;AAAA,WAC1C,CAAA,CAAA;AAAA,SACH;AAAA,OACD,CAAA,CAAA;AAAA,KACF,CAAA,CAAA;AAKD,IAAA,WAAA,CAAY,MAAM;AAChB,MAAM,KAAA,CAAA,OAAA,CAAQ,QAAQ,CAAU,MAAA,KAAA;AAC9B,QAAA,IAAI,OAAO,WAAa,EAAA;AACtB,UAAA,WAAA,CAAY,MAAM;;AAEhB,YAAA,CAAA,EAAA,GAAA,MAAA,CAAO,WAAP,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,MAAA,EAAqB,KAAM,CAAA,KAAA,EAAO,OAAQ,CAAA,KAAA,CAAA,CAAA;AAAA,WAC3C,CAAA,CAAA;AAAA,SACH;AAAA,OACD,CAAA,CAAA;AAAA,KACF,CAAA,CAAA;AAKD,IAAA,MAAM,cAOF,GAAA;AAAA,MACF,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,cAAA;AAAA,QACN,IAAM,EAAA,SAAA;AAAA,QACN,KAAO,EAAA,CAAA;AAAA,QACP,QAAU,EAAA,IAAA;AAAA,QACV,IAAM,EAAA,MAAA;AAAA,QACN,KAAK,MAAO,EAAA;AAAA,OACd;AAAA,MACA,OAAS,EAAA;AAAA,QACP,IAAM,EAAA,cAAA;AAAA,QACN,IAAM,EAAA,SAAA;AAAA,QACN,KAAO,EAAA,CAAA;AAAA,QACP,IAAM,EAAA,YAAA;AAAA,QACN,KAAK,MAAO,EAAA;AAAA,QACZ,OAAA,EAAS,MAAM,WAAY,EAAA;AAAA,OAC7B;AAAA,MACA,KAAO,EAAA;AAAA,QACL,IAAM,EAAA,cAAA;AAAA,QACN,IAAM,EAAA,SAAA;AAAA,QACN,KAAO,EAAA,EAAA;AAAA,QACP,IAAM,EAAA,IAAA;AAAA,QACN,KAAK,MAAO,EAAA;AAAA,OACd;AAAA,MACA,aAAe,EAAA;AAAA,QACb,IAAM,EAAA,0BAAA;AAAA,QACN,IAAM,EAAA,QAAA;AAAA,QACN,KAAO,EAAA,EAAA;AAAA,QACP,IAAM,EAAA,MAAA;AAAA,QACN,KAAK,MAAO,EAAA;AAAA,OACd;AAAA,MACA,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,cAAA;AAAA,QACN,IAAM,EAAA,SAAA;AAAA,QACN,KAAO,EAAA,EAAA;AAAA,QACP,IAAM,EAAA,MAAA;AAAA,QACN,KAAK,MAAO,EAAA;AAAA,QACZ,SAAS,MAAM;AACb,UAAA,mBAAA,CAAoB,KAAQ,GAAA,IAAA,CAAA;AAAA,SAC9B;AAAA,OACF;AAAA,MACA,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,cAAA;AAAA,QACN,IAAM,EAAA,SAAA;AAAA,QACN,KAAO,EAAA,EAAA;AAAA,QACP,IAAM,EAAA,MAAA;AAAA,QACN,KAAK,MAAO,EAAA;AAAA,QACZ,QAAU,EAAA,OAAA;AAAA,QACV,KAAO,EAAA,KAAA;AAAA,OACT;AAAA,KACF,CAAA;AAOA,IAAA,SAAS,gBACP,IACiD,EAAA;AACjD,MAAA,MAAM,MAA8B,GAAA;AAAA,QAClC,GAAG,eAAe,IAAI,CAAA;AAAA,OACxB,CAAA;AACA,MAAI,IAAA,KAAA,CAAM,IAAI,CAAG,EAAA;AAEf,QAAA,IAAI,SAAS,UAAY,EAAA;AACvB,UAAO,MAAA,CAAA,OAAA,GAAU,MAAM,IAAI,CAAA,CAAA;AAAA,SACtB,MAAA;AACL,UAAC,MAAA,CAAqC,YAAe,GAAA,KAAA,CAAM,IAAI,CAAA,CAAA;AAAA,SACjE;AAAA,OACK,MAAA;AACL,QAAM,MAAA,GAAA,GAAM,MAAO,CAAA,IAAA,CAAK,KAAK,CAAA,CAAE,IAAK,CAAA,CAAAA,IAAOA,KAAAA,IAAAA,CAAI,UAAW,CAAA,IAAI,CAAC,CAAA,CAAA;AAC/D,QAAA,MAAM,KAAQ,GAAA,WAAA,CAAA;AACd,QAAM,MAAA,OAAA,GAAU,2BAAK,KAAM,CAAA,KAAA,CAAA,CAAA;AAC3B,QAAI,IAAA,OAAA,IAAW,OAAQ,CAAA,CAAC,CAAG,EAAA;AAEzB,UAAA,IAAI,SAAS,UAAY,EAAA;AACvB,YAAO,MAAA,CAAA,OAAA,GAAU,MAAM,GAAI,CAAA,CAAA;AAAA,WACtB,MAAA;AACL,YAAC,MAAA,CAAqC,YAAe,GAAA,KAAA,CACnD,GACF,CAAA,CAAA;AAAA,WACF;AACA,UAAA,MAAA,CAAO,SAAY,GAAA,OAAA,CAAQ,CAAC,CAAA,CAAE,MAAM,GAAG,CAAA,CAAA;AAAA,SAClC,MAAA;AACL,UAAA,MAAA,CAAO,IAAO,GAAA,KAAA,CAAA;AAAA,SAChB;AAAA,OACF;AACA,MAAO,OAAA,MAAA,CAAA;AAAA,KACT;AAKA,IAAM,MAAA,iBAAA,GAAoB,SAAgC,MAAM;AAC9D,MAAA,IAAI,WAAW,SAAW,EAAA;AACxB,QAAA,OAAO,CAAC,eAAgB,CAAA,UAAU,CAAG,EAAA,eAAA,CAAgB,SAAS,CAAC,CAAA,CAAA;AAAA,OAC1D,MAAA;AACL,QAAO,OAAA,CAAC,eAAgB,CAAA,UAAU,CAAC,CAAA,CAAA;AAAA,OACrC;AAAA,KACD,CAAA,CAAA;AAKD,IAAM,MAAA,iBAAA,GAAoB,SAAS,MAAM;AACvC,MAAO,OAAA,iBAAA,CAAkB,KACtB,CAAA,MAAA,CAAO,CAAU,MAAA,KAAA;AAChB,QAAO,OAAA,eAAA,CAAgB,cAAgB,EAAA,MAAA,CAAO,SAAS,CAAA,CAAA;AAAA,OACxD,CACA,CAAA,IAAA,CAAK,CAAC,CAAA,EAAG,CAAM,KAAA,WAAA,CAAY,CAAE,CAAA,KAAA,EAAO,CAAE,CAAA,KAAK,CAAC,CAAA,CAAA;AAAA,KAChD,CAAA,CAAA;AAKD,IAAM,MAAA,YAAA,GAAe,gBAAgB,UAAU,CAAA,CAAA;AAK/C,IAAM,MAAA,kBAAA,GAAqB,SAAgC,MAAM;AAC/D,MAAO,OAAA;AAAA,QACL,gBAAgB,OAAO,CAAA;AAAA,QACvB,gBAAgB,eAAe,CAAA;AAAA,QAC/B,YAAA;AAAA,QACA,gBAAgB,UAAU,CAAA;AAAA,OAC5B,CAAA;AAAA,KACD,CAAA,CAAA;AAKD,IAAM,MAAA,sBAAA,GAAyB,SAAS,MAAM;AAC5C,MAAA,OAAO,mBAAmB,KACvB,CAAA,MAAA,CAAO,MAAM,OAAO,CAAA,CACpB,OAAO,CAAU,MAAA,KAAA;AAChB,QACE,OAAA,MAAA,CAAO,aAAa,OACpB,IAAA,MAAA,CAAO,SAAS,KAChB,IAAA,eAAA,CAAgB,cAAgB,EAAA,MAAA,CAAO,SAAS,CAAA,CAAA;AAAA,OAEnD,CAAA,CACA,IAAK,CAAA,CAAC,GAAG,CAAM,KAAA,WAAA,CAAY,CAAE,CAAA,KAAA,EAAO,CAAE,CAAA,KAAK,CAAC,CAAA,CAC5C,IAAI,CAAU,MAAA,KAAA;AACb,QAAI,IAAA,CAAC,OAAO,GAAK,EAAA;AACf,UAAA,MAAA,CAAO,MAAM,MAAO,EAAA,CAAA;AAAA,SACtB;AACA,QAAO,OAAA,MAAA,CAAA;AAAA,OACR,CAAA,CAAA;AAAA,KACJ,CAAA,CAAA;AAKD,IAAM,MAAA,uBAAA,GAA0B,SAAS,MAAM;AAC7C,MAAA,OAAO,mBAAmB,KACvB,CAAA,MAAA,CAAO,MAAM,OAAO,CAAA,CACpB,OAAO,CAAU,MAAA,KAAA;AAChB,QACE,OAAA,MAAA,CAAO,aAAa,OACpB,IAAA,MAAA,CAAO,SAAS,KAChB,IAAA,eAAA,CAAgB,cAAgB,EAAA,MAAA,CAAO,SAAS,CAAA,CAAA;AAAA,OAEnD,CAAA,CACA,IAAK,CAAA,CAAC,GAAG,CAAM,KAAA,WAAA,CAAY,CAAE,CAAA,KAAA,EAAO,CAAE,CAAA,KAAK,CAAC,CAAA,CAC5C,IAAI,CAAU,MAAA,KAAA;AACb,QAAI,IAAA,CAAC,OAAO,GAAK,EAAA;AACf,UAAA,MAAA,CAAO,MAAM,MAAO,EAAA,CAAA;AAAA,SACtB;AACA,QAAO,OAAA,MAAA,CAAA;AAAA,OACR,CAAA,CAAA;AAAA,KACJ,CAAA,CAAA;AAMD,IAAA,SAAS,kBAAkB,MAA6B,EAAA;;AACtD,MAAA,IAAI,OAAO,QAAU,EAAA;AACnB,QAAA,CAAA,EAAA,GAAA,OAAA,CAAQ,KAAR,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAe,QAAS,CAAA,CAAC,OAAO,OAAY,KAAA;AAC1C,UAAA,IAAI,KAAO,EAAA;AACT,YAAA,YAAA,CAAa,MAAM,CAAA,CAAA;AAAA,WACrB;AAAA,SACF,CAAA,CAAA;AAAA,OACK,MAAA;AACL,QAAA,YAAA,CAAa,MAAM,CAAA,CAAA;AAAA,OACrB;AAAA,KACF;AAMA,IAAA,SAAS,aAAa,MAA6B,EAAA;;AACjD,MAAA,IAAI,WAAW,YAAc,EAAA;AAC3B,QAAC,OAAqC,OAAS,EAAA,CAAA;AAAA,OAC1C,MAAA;AAEL,QAAA,MAAM,UAAS,EAAO,GAAA,MAAA,CAAA,OAAA,KAAP,IAAiB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,MAAA,EAAA,KAAA,CAAM,OAAO,OAAQ,CAAA,KAAA,CAAA,CAAA;AACrD,QAAA,IAAI,kBAAkB,OAAS,EAAA;AAC7B,UAAoB,mBAAA,CAAA,KAAA,CAAM,MAAO,CAAA,GAAI,CAAI,GAAA,IAAA,CAAA;AACzC,UAAA,MAAA,CACG,KAAK,CAAO,GAAA,KAAA;AACX,YAAI,IAAA,OAAO,QAAQ,QAAU,EAAA;AAC3B,cAAA,SAAA,CAAU,QAAQ,GAAG,CAAA,CAAA;AAAA,aACvB;AAAA,WACD,CACA,CAAA,KAAA,CAAM,CAAO,GAAA,KAAA;AACZ,YAAI,IAAA,OAAO,QAAQ,QAAU,EAAA;AAC3B,cAAA,SAAA,CAAU,MAAM,GAAG,CAAA,CAAA;AAAA,aACd,MAAA;AACL,cAAM,MAAA,GAAA,CAAA;AAAA,aACR;AAAA,WACD,CACA,CAAA,OAAA,CAAQ,MAAM;AACb,YAAoB,mBAAA,CAAA,KAAA,CAAM,MAAO,CAAA,GAAI,CAAI,GAAA,KAAA,CAAA;AAAA,WAC1C,CAAA,CAAA;AAAA,SACL;AAAA,OACF;AAAA,KACF;AAKA,IAAA,SAAS,gBAAmB,GAAA;AAC1B,MAAA,MAAM,eAAe,iBAAkB,CAAA,KAAA,CAAM,KAAK,CAAU,MAAA,KAAA,MAAA,CAAO,SAAS,cAAI,CAAA,CAAA;AAChF,MAAA,IAAI,CAAC,YAAc,EAAA,OAAA;AACnB,MAAA,iBAAA,CAAkB,YAAY,CAAA,CAAA;AAAA,KAChC;AAOA,IAAA,SAAS,SAAS,QAAuD,EAAA;AACvE,MAAO,OAAA,OAAA,CAAQ,KAAO,CAAA,QAAA,CAAS,QAAQ,CAAA,CAAA;AAAA,KACzC;AAOA,IAAS,SAAA,aAAA,CACPC,QACA,QACsB,EAAA;AACtB,MAAA,OAAO,OAAQ,CAAA,KAAA,CAAO,aAAcA,CAAAA,MAAAA,EAAO,QAAQ,CAAA,CAAA;AAAA,KACrD;AAMA,IAAA,SAAS,cAAc,IAA0B,EAAA;;AAC/C,MAAQ,CAAA,EAAA,GAAA,OAAA,CAAA,KAAA,KAAR,mBAAe,aAAc,CAAA,IAAA,CAAA,CAAA;AAAA,KAC/B;AAMA,IAAA,SAAS,cAAcA,MAAyD,EAAA;;AAC9E,MAAQ,CAAA,EAAA,GAAA,OAAA,CAAA,KAAA,KAAR,mBAAe,aAAcA,CAAAA,MAAAA,CAAAA,CAAAA;AAAA,KAC/B;AAMA,IAAA,SAAS,YAAYA,MAAyD,EAAA;;AAC5E,MAAQ,CAAA,EAAA,GAAA,OAAA,CAAA,KAAA,KAAR,mBAAe,WAAYA,CAAAA,MAAAA,CAAAA,CAAAA;AAAA,KAC7B;AAKA,IAAa,QAAA,CAAA;AAAA,MACX,QAAA;AAAA,MACA,aAAA;AAAA,MACA,WAAA;AAAA,MACA,aAAA;AAAA,MACA,aAAA;AAAA,KACD,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}