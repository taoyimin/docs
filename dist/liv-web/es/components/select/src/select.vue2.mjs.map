{"version":3,"file":"select.vue2.mjs","sources":["../../../../../../packages/components/select/src/select.vue"],"sourcesContent":["<template>\r\n  <el-select\r\n    ref=\"selectRef\"\r\n    class=\"liv-select\"\r\n    v-model=\"model\"\r\n    placeholder=\"请选择\"\r\n    noDataText=\"暂无数据\"\r\n    :loading=\"loading\"\r\n    @visibleChange=\"visibleChange\"\r\n    v-bind=\"pick(globalProps, Object.keys(selectProps))\">\r\n    <el-option\r\n      v-for=\"item in options\"\r\n      :key=\"item[propsProxy.labelKey as keyof T]\"\r\n      :label=\"item[propsProxy.labelKey as keyof T]\"\r\n      :value=\"item[propsProxy.valueKey as keyof T]\">\r\n      <template v-if=\"$slots.default\" #default>\r\n        <slot name=\"default\" v-bind=\"item || {}\" />\r\n      </template>\r\n    </el-option>\r\n    <template v-for=\"(_, name) in omit($slots, 'default')\" #[name]=\"slotData\">\r\n      <slot :name=\"name\" v-bind=\"slotData || {}\" />\r\n    </template>\r\n  </el-select>\r\n</template>\r\n\r\n<script lang=\"ts\" setup generic=\"T extends Record<string | number | symbol, any>\">\r\nimport { type Ref, ref, watch, watchEffect, inject } from 'vue';\r\nimport type { ElSelectInstance, SelectFullProps, SelectProps } from './select';\r\nimport { omit, pick } from 'lodash-es';\r\nimport { type LoadData, getPropsPoxy, MakeRequired } from '@liv-web/utils';\r\nimport { SelectProps as selectProps } from 'element-plus/es/components/select/src/select';\r\nimport { ElSelect, ElOption } from 'element-plus';\r\nimport { SELECT_KEY } from '@liv-web/constants';\r\n\r\n/**\r\n * 组件配置项\r\n */\r\ndefineOptions({\r\n  name: 'LivSelect',\r\n});\r\n\r\n/**\r\n * 注入全局属性\r\n */\r\nconst globalProps = inject(SELECT_KEY, {});\r\n\r\n/**\r\n * 组件属性\r\n */\r\nconst props = withDefaults(defineProps<SelectProps<T>>(), {\r\n  labelKey: () => 'label',\r\n  valueKey: () => 'value',\r\n  lazy: () => false,\r\n  data: () => [] as T[],\r\n});\r\n\r\n/**\r\n * 属性代理\r\n */\r\nconst propsProxy = getPropsPoxy<MakeRequired<SelectFullProps<T>, 'labelKey' | 'valueKey' | 'lazy'>>(\r\n  props,\r\n  globalProps,\r\n);\r\n\r\n/**\r\n * 选择器组件实例\r\n */\r\nconst selectRef = ref<ElSelectInstance | null>(null);\r\n\r\n/**\r\n * 使选择器的输入框获取焦点\r\n */\r\nfunction focus() {\r\n  selectRef.value?.focus();\r\n}\r\n\r\n/**\r\n * 使选择器的输入框失去焦点，并隐藏下拉框\r\n */\r\nfunction blur() {\r\n  selectRef.value?.blur();\r\n}\r\n\r\n/**\r\n * 双向绑定\r\n */\r\nconst model = defineModel<T[keyof T] | (T[keyof T] | undefined)[]>();\r\n\r\n/**\r\n * 下拉列表可见状态\r\n */\r\nconst visible = ref(false);\r\n\r\n/**\r\n * 下拉列表加载状态\r\n */\r\nconst loading = ref(false);\r\n\r\n/**\r\n * 是否已完成数据加载\r\n */\r\nconst loaded = ref(false);\r\n\r\n/**\r\n * 组件数据\r\n */\r\nconst options: Ref<T[]> = ref([]);\r\n\r\n/**\r\n * 下拉列表可见状态监听\r\n * @param e 拉下列表可见状态\r\n */\r\nfunction visibleChange(e: boolean) {\r\n  visible.value = e;\r\n}\r\n\r\n/**\r\n * 组件data属性改变后清空之前的数据\r\n */\r\nwatch(\r\n  () => propsProxy.data,\r\n  () => {\r\n    options.value = [];\r\n    loaded.value = false;\r\n  },\r\n);\r\n\r\nwatchEffect(() => {\r\n  initData(propsProxy.data);\r\n});\r\n\r\n/**\r\n * 初始化组件数据\r\n * @param data 组件数据\r\n */\r\nfunction initData(data: LoadData<T> | (() => LoadData<T>) | undefined) {\r\n  if (!data) {\r\n    options.value = [];\r\n  } else if (Array.isArray(data)) {\r\n    options.value = data;\r\n  } else if (data instanceof Function) {\r\n    if (propsProxy.lazy) {\r\n      if (visible.value && !loaded.value) {\r\n        loadFunction(data);\r\n      }\r\n    } else {\r\n      loadFunction(data);\r\n    }\r\n  } else if (data instanceof Promise) {\r\n    loadPromise(data);\r\n  } else {\r\n    throw new Error('[liv-web/select]data属性只能是数组、Promise、Callback函数、Getter函数。');\r\n  }\r\n}\r\n\r\n/**\r\n * 通过回调函数的方式加载数据\r\n * @param fn 回调函数\r\n */\r\nfunction loadFunction(fn: Function) {\r\n  if (fn.length === 0) {\r\n    // Getter函数\r\n    initData(fn());\r\n  } else {\r\n    // CallBack函数\r\n    loading.value = true;\r\n    fn(\r\n      (data: T[]) => {\r\n        options.value = data ?? [];\r\n        loading.value = false;\r\n        loaded.value = true;\r\n      },\r\n      () => {\r\n        loading.value = false;\r\n        loaded.value = true;\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * 通过promise的方法加载数据\r\n * @param promise 加载数据promise\r\n */\r\nfunction loadPromise(promise: Promise<T[]>) {\r\n  loading.value = true;\r\n  promise\r\n    .then(res => (options.value = res ?? []))\r\n    .finally(() => {\r\n      loading.value = false;\r\n      loaded.value = true;\r\n    });\r\n}\r\n\r\n/**\r\n * 对外暴露的属性及方法\r\n */\r\ndefineExpose({\r\n  focus,\r\n  blur,\r\n});\r\n</script>\r\n"],"names":["_useModel"],"mappings":"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"}