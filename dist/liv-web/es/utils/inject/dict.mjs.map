{"version":3,"file":"dict.mjs","sources":["../../../../../packages/utils/inject/dict.ts"],"sourcesContent":["import { LOAD_DICT_LIST_BY_ID_KEY, LOAD_DICT_LIST_KEY } from '@liv-web/constants';\r\nimport { inject } from 'vue';\r\n\r\n/**\r\n * 通过dictType查询数据字典方法\r\n */\r\nexport type LoadDictListFunction<T = any> = (dictType: string) => Promise<T>;\r\n\r\n/**\r\n * 通过parentId查询数据字典方法\r\n */\r\nexport type LoadDictListByIdFunction<T = any> = (parentId: number) => Promise<T>;\r\n\r\n/**\r\n * 注入加载数据字典列表方法\r\n */\r\nexport function injectLoadDictList<T>() {\r\n  const loadDictList = inject(LOAD_DICT_LIST_KEY, undefined);\r\n  if (loadDictList) {\r\n    return loadDictList as LoadDictListFunction<T>;\r\n  } else {\r\n    return () => Promise.reject(new Error('[liv-web/utils]请检查是否已注入加载数据字典列表方法。'));\r\n  }\r\n}\r\n\r\n/**\r\n * 注入加载子级数据字典列表方法\r\n */\r\nexport function injectLoadDictListById<T>() {\r\n  const loadDictListById = inject(LOAD_DICT_LIST_BY_ID_KEY, undefined);\r\n  if (loadDictListById) {\r\n    return loadDictListById as LoadDictListByIdFunction<T>;\r\n  } else {\r\n    return () =>\r\n      Promise.reject(new Error('[liv-web/utils]请检查是否已注入加载子级数据字典列表方法。'));\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAgBO,SAAS,kBAAwB,GAAA;AACtC,EAAM,MAAA,YAAA,GAAe,MAAO,CAAA,kBAAA,EAAoB,KAAS,CAAA,CAAA,CAAA;AACzD,EAAA,IAAI,YAAc,EAAA;AAChB,IAAO,OAAA,YAAA,CAAA;AAAA,GACF,MAAA;AACL,IAAA,OAAO,MAAM,OAAQ,CAAA,MAAA,CAAO,IAAI,KAAA,CAAM,mIAAoC,CAAC,CAAA,CAAA;AAAA,GAC7E;AACF,CAAA;AAKO,SAAS,sBAA4B,GAAA;AAC1C,EAAM,MAAA,gBAAA,GAAmB,MAAO,CAAA,wBAAA,EAA0B,KAAS,CAAA,CAAA,CAAA;AACnE,EAAA,IAAI,gBAAkB,EAAA;AACpB,IAAO,OAAA,gBAAA,CAAA;AAAA,GACF,MAAA;AACL,IAAA,OAAO,MACL,OAAQ,CAAA,MAAA,CAAO,IAAI,KAAA,CAAM,+IAAsC,CAAC,CAAA,CAAA;AAAA,GACpE;AACF;;;;"}