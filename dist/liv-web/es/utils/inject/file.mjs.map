{"version":3,"file":"file.mjs","sources":["../../../../../packages/utils/inject/file.ts"],"sourcesContent":["import {\r\n  FILE_UPLOAD_DATA_KEY,\r\n  FILE_UPLOAD_HEADER_KEY,\r\n  FILE_UPLOAD_URL_KEY,\r\n  HANDLE_FILE_RESPONSE_KEY,\r\n  HANDLE_FILE_URLS_KEY,\r\n  HANDLE_THUMB_URLS_KEY,\r\n  FILE_CHUNK_UPLOAD_CONNFIG_KRY,\r\n  FILE_CHUNK_UPLOAD_FUNCTION_KEY,\r\n  FILE_CHUNK_MERGE_FUNCTION_KEY,\r\n} from '@liv-web/constants';\r\nimport { inject } from 'vue';\r\n\r\nexport interface FileChunk {\r\n  name: string; // 文件标识名称\r\n  blob: Blob; // 文件切片\r\n  index: number; // 当前切片编号\r\n  chunkSize: number; // 每个切片大小\r\n  fileSize: number; // 文件总大小\r\n  md5: string; // 文件唯一标识\r\n  fileName: string; // 文件名\r\n  totalChunkLength: number; // 文件总切片数\r\n}\r\n\r\nexport type FileUploadMergeParams = Pick<\r\n  FileChunk,\r\n  'md5' | 'fileName' | 'fileSize' | 'totalChunkLength'\r\n>;\r\n\r\n/**\r\n * 文件上传header\r\n */\r\nexport type FileUploadHeader = Record<string, any> | (() => Record<string, any>);\r\n\r\n/**\r\n * 文件上传data\r\n */\r\nexport type FileUploadData = Record<string, any> | (() => Record<string, any>);\r\n\r\n/**\r\n * 将数据库存储的文件地址转换为可以访问的文件地址数组方法\r\n * @param urls 数据库存储的文件地址\r\n * @returns { string[] } 可以访问的文件地址数组\r\n */\r\nexport type HandleFileUrlsFunction = (urls: string | undefined) => string[];\r\n\r\n/**\r\n * 处理文件上传请求返回的response方法\r\n * @param response 网络请求返回的response\r\n * @returns { string } 文件上传后的url地址，用于表单提交保存到数据库中\r\n */\r\nexport type HandleFileResponseFunction = (response: any) => string;\r\n\r\n/**\r\n * 文件切片上传配置\r\n * @param chunkSize 切片大小\r\n * @param limit 最大上传数量\r\n * @returns { FileChunkUploadConfig } 文件切片上传配置\r\n * */\r\nexport type FileChunkUploadConfig = {\r\n  chunkSize?: number;\r\n  limit?: number;\r\n};\r\n\r\n/**\r\n * 文件切片上传方法\r\n * @param params 切片数据\r\n * @param onUploadProgress 上传进度回调\r\n * @returns { Promise<T> } 上传后的结果Promise对象\r\n */\r\nexport type FileChunkUploadFunction<T = any> = (\r\n  params: FileChunk,\r\n  onUploadProgress: (progressEvent: any) => void,\r\n) => Promise<T>;\r\n\r\n/**\r\n * 文件切片合并方法\r\n * @param params 合并参数\r\n * @returns { Promise<T> } 合并后的结果Promise对象\r\n */\r\nexport type FileChunkMergeFunction<T = any> = (params: FileUploadMergeParams) => Promise<T>;\r\n\r\n/**\r\n * 注入文件上传地址\r\n */\r\nexport function injectFileUploadUrl() {\r\n  const fileUploadUrl = inject(FILE_UPLOAD_URL_KEY, undefined);\r\n  if (fileUploadUrl) {\r\n    return fileUploadUrl;\r\n  } else {\r\n    console.error('[liv-web/utils]请检查是否已注入文件上传地址。');\r\n  }\r\n}\r\n\r\n/**\r\n * 注入文件上传请求header\r\n */\r\nexport function injectFileUploadHeader() {\r\n  const fileUploadHeader = inject(FILE_UPLOAD_HEADER_KEY, {});\r\n  return fileUploadHeader;\r\n}\r\n\r\n/**\r\n * 注入文件上传请求data\r\n */\r\nexport function injectFileUploadData() {\r\n  const fileUploadData = inject(FILE_UPLOAD_DATA_KEY, {});\r\n  return fileUploadData;\r\n}\r\n\r\n/**\r\n * 注入处理文件地址方法\r\n */\r\nexport function injectHandleFileUrls(): HandleFileUrlsFunction | undefined {\r\n  const handleFileUrls = inject(HANDLE_FILE_URLS_KEY, undefined);\r\n  if (handleFileUrls) {\r\n    return handleFileUrls;\r\n  } else {\r\n    console.error('[liv-web/utils]请检查是否已注入处理文件地址方法。');\r\n  }\r\n}\r\n\r\n/**\r\n * 注入处理缩略图地址方法\r\n */\r\nexport function injectHandleThumbUrls(): HandleFileUrlsFunction | undefined {\r\n  const handleThumbUrls = inject(HANDLE_THUMB_URLS_KEY, undefined);\r\n  if (handleThumbUrls) {\r\n    return handleThumbUrls;\r\n  } else {\r\n    console.warn('[liv-web/utils]请检查是否已注入处理缩略图地址方法。');\r\n  }\r\n}\r\n\r\n/**\r\n * 注入处理文件上传请求返回的response方法\r\n */\r\nexport function injectHandleFileResponse(): HandleFileResponseFunction | undefined {\r\n  const handleFileResponse = inject(HANDLE_FILE_RESPONSE_KEY, undefined);\r\n  if (handleFileResponse) {\r\n    return handleFileResponse;\r\n  } else {\r\n    console.error('[liv-web/utils]请检查是否已注入处理文件上传请求返回的response方法。');\r\n  }\r\n}\r\n\r\n/**\r\n * 注入文件切片上传配置\r\n * */\r\nexport function injectFileChunkUploadConfig() {\r\n  const fileChunkUploadConfig = inject(FILE_CHUNK_UPLOAD_CONNFIG_KRY, {\r\n    chunkSize: 5 * 1024 * 1024,\r\n    limit: 3,\r\n  });\r\n  return fileChunkUploadConfig;\r\n}\r\n\r\n/**\r\n * 注入文件切片上传地址\r\n */\r\nexport function injectFileChunkUploadFunction<T>() {\r\n  const fileChunkUploadAxios = inject(FILE_CHUNK_UPLOAD_FUNCTION_KEY, undefined);\r\n  if (fileChunkUploadAxios) {\r\n    return fileChunkUploadAxios as FileChunkUploadFunction<T>;\r\n  } else {\r\n    return () => Promise.reject(new Error('[liv-web/utils]请检查是否已注入文件切片上传地址。'));\r\n  }\r\n}\r\n\r\n/**\r\n * 注入文件切片合并地址\r\n */\r\nexport function injectFileChunkMergeFunction<T>() {\r\n  const fileChunkMerge = inject(FILE_CHUNK_MERGE_FUNCTION_KEY, undefined);\r\n  if (fileChunkMerge) {\r\n    return fileChunkMerge as FileChunkMergeFunction<T>;\r\n  } else {\r\n    return () => Promise.reject(new Error('[liv-web/utils]请检查是否已注入文件切片合并地址。'));\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAqFO,SAAS,mBAAsB,GAAA;AACpC,EAAM,MAAA,aAAA,GAAgB,MAAO,CAAA,mBAAA,EAAqB,KAAS,CAAA,CAAA,CAAA;AAC3D,EAAA,IAAI,aAAe,EAAA;AACjB,IAAO,OAAA,aAAA,CAAA;AAAA,GACF,MAAA;AACL,IAAA,OAAA,CAAQ,MAAM,2GAAgC,CAAA,CAAA;AAAA,GAChD;AACF,CAAA;AAKO,SAAS,sBAAyB,GAAA;AACvC,EAAA,MAAM,gBAAmB,GAAA,MAAA,CAAO,sBAAwB,EAAA,EAAE,CAAA,CAAA;AAC1D,EAAO,OAAA,gBAAA,CAAA;AACT,CAAA;AAKO,SAAS,oBAAuB,GAAA;AACrC,EAAA,MAAM,cAAiB,GAAA,MAAA,CAAO,oBAAsB,EAAA,EAAE,CAAA,CAAA;AACtD,EAAO,OAAA,cAAA,CAAA;AACT,CAAA;AAKO,SAAS,oBAA2D,GAAA;AACzE,EAAM,MAAA,cAAA,GAAiB,MAAO,CAAA,oBAAA,EAAsB,KAAS,CAAA,CAAA,CAAA;AAC7D,EAAA,IAAI,cAAgB,EAAA;AAClB,IAAO,OAAA,cAAA,CAAA;AAAA,GACF,MAAA;AACL,IAAA,OAAA,CAAQ,MAAM,uHAAkC,CAAA,CAAA;AAAA,GAClD;AACF,CAAA;AAKO,SAAS,qBAA4D,GAAA;AAC1E,EAAM,MAAA,eAAA,GAAkB,MAAO,CAAA,qBAAA,EAAuB,KAAS,CAAA,CAAA,CAAA;AAC/D,EAAA,IAAI,eAAiB,EAAA;AACnB,IAAO,OAAA,eAAA,CAAA;AAAA,GACF,MAAA;AACL,IAAA,OAAA,CAAQ,KAAK,6HAAmC,CAAA,CAAA;AAAA,GAClD;AACF,CAAA;AAKO,SAAS,wBAAmE,GAAA;AACjF,EAAM,MAAA,kBAAA,GAAqB,MAAO,CAAA,wBAAA,EAA0B,KAAS,CAAA,CAAA,CAAA;AACrE,EAAA,IAAI,kBAAoB,EAAA;AACtB,IAAO,OAAA,kBAAA,CAAA;AAAA,GACF,MAAA;AACL,IAAA,OAAA,CAAQ,MAAM,6JAA+C,CAAA,CAAA;AAAA,GAC/D;AACF,CAAA;AAKO,SAAS,2BAA8B,GAAA;AAC5C,EAAM,MAAA,qBAAA,GAAwB,OAAO,6BAA+B,EAAA;AAAA,IAClE,SAAA,EAAW,IAAI,IAAO,GAAA,IAAA;AAAA,IACtB,KAAO,EAAA,CAAA;AAAA,GACR,CAAA,CAAA;AACD,EAAO,OAAA,qBAAA,CAAA;AACT,CAAA;AAKO,SAAS,6BAAmC,GAAA;AACjD,EAAM,MAAA,oBAAA,GAAuB,MAAO,CAAA,8BAAA,EAAgC,KAAS,CAAA,CAAA,CAAA;AAC7E,EAAA,IAAI,oBAAsB,EAAA;AACxB,IAAO,OAAA,oBAAA,CAAA;AAAA,GACF,MAAA;AACL,IAAA,OAAO,MAAM,OAAQ,CAAA,MAAA,CAAO,IAAI,KAAA,CAAM,uHAAkC,CAAC,CAAA,CAAA;AAAA,GAC3E;AACF,CAAA;AAKO,SAAS,4BAAkC,GAAA;AAChD,EAAM,MAAA,cAAA,GAAiB,MAAO,CAAA,6BAAA,EAA+B,KAAS,CAAA,CAAA,CAAA;AACtE,EAAA,IAAI,cAAgB,EAAA;AAClB,IAAO,OAAA,cAAA,CAAA;AAAA,GACF,MAAA;AACL,IAAA,OAAO,MAAM,OAAQ,CAAA,MAAA,CAAO,IAAI,KAAA,CAAM,uHAAkC,CAAC,CAAA,CAAA;AAAA,GAC3E;AACF;;;;"}