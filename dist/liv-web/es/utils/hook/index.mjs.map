{"version":3,"file":"index.mjs","sources":["../../../../../packages/utils/hook/index.ts"],"sourcesContent":["import { ref, onMounted, onUnmounted } from 'vue';\r\n\r\n/**\r\n * 观察页面是否进入深色模式\r\n * @remarks 仅观察页面html的class属性变化，当检测到'dark'类被添加或移除时，会改变isDarkMode的值\r\n * @returns {Object} 返回包含isDarkMode响应式引用的对象\r\n * @property {Ref<boolean>} isDarkMode 表示当前是否为深色模式的布尔值引用\r\n */\r\nexport function useDarkModeObserver() {\r\n  const isDarkMode = ref(false);\r\n\r\n  const observer = new MutationObserver(mutationsList => {\r\n    for (const mutation of mutationsList) {\r\n      if (mutation.type === 'attributes' && mutation.attributeName === 'class') {\r\n        const htmlElement = document.documentElement;\r\n        isDarkMode.value = htmlElement.classList.contains('dark');\r\n      }\r\n    }\r\n  });\r\n\r\n  onMounted(() => {\r\n    const htmlElement = document.documentElement;\r\n    isDarkMode.value = htmlElement.classList.contains('dark');\r\n    observer.observe(htmlElement, { attributes: true });\r\n  });\r\n\r\n  onUnmounted(() => {\r\n    observer.disconnect();\r\n  });\r\n\r\n  return {\r\n    isDarkMode,\r\n  };\r\n}\r\n"],"names":[],"mappings":";;AAQO,SAAS,mBAAsB,GAAA;AACpC,EAAM,MAAA,UAAA,GAAa,IAAI,KAAK,CAAA,CAAA;AAE5B,EAAM,MAAA,QAAA,GAAW,IAAI,gBAAA,CAAiB,CAAiB,aAAA,KAAA;AACrD,IAAA,KAAA,MAAW,YAAY,aAAe,EAAA;AACpC,MAAA,IAAI,QAAS,CAAA,IAAA,KAAS,YAAgB,IAAA,QAAA,CAAS,kBAAkB,OAAS,EAAA;AACxE,QAAA,MAAM,cAAc,QAAS,CAAA,eAAA,CAAA;AAC7B,QAAA,UAAA,CAAW,KAAQ,GAAA,WAAA,CAAY,SAAU,CAAA,QAAA,CAAS,MAAM,CAAA,CAAA;AAAA,OAC1D;AAAA,KACF;AAAA,GACD,CAAA,CAAA;AAED,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,MAAM,cAAc,QAAS,CAAA,eAAA,CAAA;AAC7B,IAAA,UAAA,CAAW,KAAQ,GAAA,WAAA,CAAY,SAAU,CAAA,QAAA,CAAS,MAAM,CAAA,CAAA;AACxD,IAAA,QAAA,CAAS,OAAQ,CAAA,WAAA,EAAa,EAAE,UAAA,EAAY,MAAM,CAAA,CAAA;AAAA,GACnD,CAAA,CAAA;AAED,EAAA,WAAA,CAAY,MAAM;AAChB,IAAA,QAAA,CAAS,UAAW,EAAA,CAAA;AAAA,GACrB,CAAA,CAAA;AAED,EAAO,OAAA;AAAA,IACL,UAAA;AAAA,GACF,CAAA;AACF;;;;"}